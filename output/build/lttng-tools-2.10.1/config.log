This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by lttng-tools configure 2.10.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --target=arm-buildroot-linux-uclibcgnueabihf --host=arm-buildroot-linux-uclibcgnueabihf --build=x86_64-pc-linux-gnu --prefix=/usr --exec-prefix=/usr --sysconfdir=/etc --localstatedir=/var --program-prefix= --disable-gtk-doc --disable-gtk-doc-html --disable-doc --disable-docs --disable-documentation --with-xmlto=no --with-fop=no --disable-dependency-tracking --enable-ipv6 --disable-nls --disable-static --enable-shared --disable-man-pages --without-lttng-ust

## --------- ##
## Platform. ##
## --------- ##

hostname = ERS-EPL-DS-E06995E6B25F
uname -m = x86_64
uname -r = 4.15.0-43-generic
uname -s = Linux
uname -v = #46~16.04.1-Ubuntu SMP Fri Dec 7 13:31:08 UTC 2018

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin
PATH: /home/epl/Jan_7/Linux-Test-Framework/output/host/sbin
PATH: /home/epl/arjun/Git_Checkin_Demo/Framework/Cross-compiler/bin
PATH: /home/epl/arjun/Git_Checkin_Demo/Framework/Linux-Kernel/Linux/Cross-compiler/bin
PATH: /home/epl/mynewt/gcc-arm-none-eabi-7-2018-q2-update/bin
PATH: /opt/linaro/gcc-linaro-7.2.1-2017.11-x86_64_arm-linux-gnueabihf/bin
PATH: /home/epl/bin
PATH: /home/epl/.local/bin
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games
PATH: /snap/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2836: checking build system type
configure:2850: result: x86_64-pc-linux-gnu
configure:2870: checking host system type
configure:2883: result: arm-buildroot-linux-uclibcgnueabihf
configure:2903: checking target system type
configure:2916: result: arm-buildroot-linux-uclibcgnueabihf
configure:2960: checking for a BSD-compatible install
configure:3028: result: /usr/bin/install -c
configure:3039: checking whether build environment is sane
configure:3094: result: yes
configure:3153: checking for arm-buildroot-linux-uclibcgnueabihf-strip
configure:3180: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-strip
configure:3245: checking for a thread-safe mkdir -p
configure:3284: result: /bin/mkdir -p
configure:3291: checking for gawk
configure:3307: found /usr/bin/gawk
configure:3318: result: gawk
configure:3329: checking whether make sets $(MAKE)
configure:3351: result: yes
configure:3380: checking whether make supports nested variables
configure:3397: result: yes
configure:3476: checking how to create a pax tar archive
configure:3487: tar --version
tar (GNU tar) 1.28
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John Gilmore and Jay Fenlason.
configure:3490: $? = 0
configure:3530: tardir=conftest.dir && eval tar --format=posix -chf - "$tardir" >conftest.tar
configure:3533: $? = 0
configure:3537: tar -xf - <conftest.tar
configure:3540: $? = 0
configure:3542: cat conftest.dir/file
GrepMe
configure:3545: $? = 0
configure:3558: result: gnutar
configure:3609: checking whether to enable maintainer-specific portions of Makefiles
configure:3618: result: yes
configure:3644: checking whether make supports nested variables
configure:3661: result: yes
configure:3688: checking for style of include used by make
configure:3716: result: GNU
configure:3747: checking for arm-buildroot-linux-uclibcgnueabihf-gcc
configure:3774: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc
configure:4043: checking for C compiler version
configure:4052: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc --version >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real (Buildroot 2018.02.1-g1c99f2c-dirty) 6.4.0
Copyright (C) 2017 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:4063: $? = 0
configure:4052: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -v >&5
Using built-in specs.
COLLECT_GCC=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc.br_real
COLLECT_LTO_WRAPPER=/home/epl/Jan_7/Linux-Test-Framework/output/host/libexec/gcc/arm-buildroot-linux-uclibcgnueabihf/6.4.0/lto-wrapper
Target: arm-buildroot-linux-uclibcgnueabihf
Configured with: ./configure --prefix=/home/epl/Jan_7/Linux-Test-Framework/output/host --sysconfdir=/home/epl/Jan_7/Linux-Test-Framework/output/host/etc --enable-static --target=arm-buildroot-linux-uclibcgnueabihf --with-sysroot=/home/epl/Jan_7/Linux-Test-Framework/output/host/arm-buildroot-linux-uclibcgnueabihf/sysroot --disable-__cxa_atexit --with-gnu-ld --disable-libssp --disable-multilib --with-gmp=/home/epl/Jan_7/Linux-Test-Framework/output/host --with-mpc=/home/epl/Jan_7/Linux-Test-Framework/output/host --with-mpfr=/home/epl/Jan_7/Linux-Test-Framework/output/host --with-pkgversion='Buildroot 2018.02.1-g1c99f2c-dirty' --with-bugurl=http://bugs.buildroot.net/ --disable-libquadmath --disable-libsanitizer --enable-tls --disable-libmudflap --enable-threads --without-isl --without-cloog --disable-decimal-float --with-abi=aapcs-linux --with-cpu=cortex-a7 --with-fpu=neon-vfpv4 --with-float=hard --with-mode=arm --enable-languages=c,c++ --with-build-time-tools=/home/epl/Jan_7/Linux-Test-Framework/output/host/arm-buildroot-linux-uclibcgnueabihf/bin --enable-shared --disable-libgomp
Thread model: posix
gcc version 6.4.0 (Buildroot 2018.02.1-g1c99f2c-dirty) 
configure:4063: $? = 0
configure:4052: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -V >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: error: unrecognized command line option '-V'
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: fatal error: no input files
compilation terminated.
configure:4063: $? = 1
configure:4052: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -qversion >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: error: unrecognized command line option '-qversion'; did you mean '--version'?
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: fatal error: no input files
compilation terminated.
configure:4063: $? = 1
configure:4083: checking whether the C compiler works
configure:4105: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:4109: $? = 0
configure:4157: result: yes
configure:4160: checking for C compiler default output file name
configure:4162: result: a.out
configure:4168: checking for suffix of executables
configure:4175: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:4179: $? = 0
configure:4201: result: 
configure:4223: checking whether we are cross compiling
configure:4261: result: yes
configure:4266: checking for suffix of object files
configure:4288: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:4292: $? = 0
configure:4313: result: o
configure:4317: checking whether we are using the GNU C compiler
configure:4336: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:4336: $? = 0
configure:4345: result: yes
configure:4354: checking whether /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc accepts -g
configure:4374: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -g -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:4374: $? = 0
configure:4415: result: yes
configure:4432: checking for /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc option to accept ISO C89
configure:4495: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc  -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:4495: $? = 0
configure:4508: result: none needed
configure:4533: checking whether /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc understands -c and -o together
configure:4555: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c conftest.c -o conftest2.o
configure:4558: $? = 0
configure:4555: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c conftest.c -o conftest2.o
configure:4558: $? = 0
configure:4570: result: yes
configure:4589: checking dependency style of /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc
configure:4700: result: none
configure:4721: checking how to run the C preprocessor
configure:4791: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp
configure:4811: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:4811: $? = 0
configure:4825: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
conftest.c:11:28: fatal error: ac_nonexistent.h: No such file or directory
 #include <ac_nonexistent.h>
                            ^
compilation terminated.
configure:4825: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:4854: checking for grep that handles long lines and -e
configure:4912: result: /bin/grep
configure:4917: checking for egrep
configure:4979: result: /bin/grep -E
configure:4984: checking for ANSI C header files
configure:5004: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5004: $? = 0
configure:5088: result: yes
configure:5101: checking for sys/types.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for sys/stat.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for stdlib.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for string.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for memory.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for strings.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for inttypes.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for stdint.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5101: checking for unistd.h
configure:5101: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5101: $? = 0
configure:5101: result: yes
configure:5114: checking minix/config.h usability
configure:5114: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c:54:26: fatal error: minix/config.h: No such file or directory
 #include <minix/config.h>
                          ^
compilation terminated.
configure:5114: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <minix/config.h>
configure:5114: result: no
configure:5114: checking minix/config.h presence
configure:5114: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
conftest.c:21:26: fatal error: minix/config.h: No such file or directory
 #include <minix/config.h>
                          ^
compilation terminated.
configure:5114: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| /* end confdefs.h.  */
| #include <minix/config.h>
configure:5114: result: no
configure:5114: checking for minix/config.h
configure:5114: result: no
configure:5135: checking whether it is safe to define __EXTENSIONS__
configure:5153: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5153: $? = 0
configure:5160: result: yes
configure:5181: checking for special C compiler options needed for large files
configure:5226: result: no
configure:5232: checking for _FILE_OFFSET_BITS value needed for large files
configure:5257: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:5257: $? = 0
configure:5289: result: no
configure:5382: checking for arm-buildroot-linux-uclibcgnueabihf-gcc
configure:5409: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc
configure:5678: checking for C compiler version
configure:5687: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc --version >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real (Buildroot 2018.02.1-g1c99f2c-dirty) 6.4.0
Copyright (C) 2017 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:5698: $? = 0
configure:5687: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -v >&5
Using built-in specs.
COLLECT_GCC=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc.br_real
COLLECT_LTO_WRAPPER=/home/epl/Jan_7/Linux-Test-Framework/output/host/libexec/gcc/arm-buildroot-linux-uclibcgnueabihf/6.4.0/lto-wrapper
Target: arm-buildroot-linux-uclibcgnueabihf
Configured with: ./configure --prefix=/home/epl/Jan_7/Linux-Test-Framework/output/host --sysconfdir=/home/epl/Jan_7/Linux-Test-Framework/output/host/etc --enable-static --target=arm-buildroot-linux-uclibcgnueabihf --with-sysroot=/home/epl/Jan_7/Linux-Test-Framework/output/host/arm-buildroot-linux-uclibcgnueabihf/sysroot --disable-__cxa_atexit --with-gnu-ld --disable-libssp --disable-multilib --with-gmp=/home/epl/Jan_7/Linux-Test-Framework/output/host --with-mpc=/home/epl/Jan_7/Linux-Test-Framework/output/host --with-mpfr=/home/epl/Jan_7/Linux-Test-Framework/output/host --with-pkgversion='Buildroot 2018.02.1-g1c99f2c-dirty' --with-bugurl=http://bugs.buildroot.net/ --disable-libquadmath --disable-libsanitizer --enable-tls --disable-libmudflap --enable-threads --without-isl --without-cloog --disable-decimal-float --with-abi=aapcs-linux --with-cpu=cortex-a7 --with-fpu=neon-vfpv4 --with-float=hard --with-mode=arm --enable-languages=c,c++ --with-build-time-tools=/home/epl/Jan_7/Linux-Test-Framework/output/host/arm-buildroot-linux-uclibcgnueabihf/bin --enable-shared --disable-libgomp
Thread model: posix
gcc version 6.4.0 (Buildroot 2018.02.1-g1c99f2c-dirty) 
configure:5698: $? = 0
configure:5687: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -V >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: error: unrecognized command line option '-V'
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: fatal error: no input files
compilation terminated.
configure:5698: $? = 1
configure:5687: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -qversion >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: error: unrecognized command line option '-qversion'; did you mean '--version'?
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: fatal error: no input files
compilation terminated.
configure:5698: $? = 1
configure:5702: checking whether we are using the GNU C compiler
configure:5730: result: yes
configure:5739: checking whether /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc accepts -g
configure:5800: result: yes
configure:5817: checking for /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc option to accept ISO C89
configure:5893: result: none needed
configure:5918: checking whether /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc understands -c and -o together
configure:5955: result: yes
configure:5974: checking dependency style of /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc
configure:6085: result: none
configure:6104: checking for /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc option to accept ISO C99
configure:6253: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc  -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c:69:9: error: unknown type name 'wchar_t'
   const wchar_t *name;
         ^~~~~~~
configure:6253: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:6253: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -std=gnu99 -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c:69:9: error: unknown type name 'wchar_t'
   const wchar_t *name;
         ^~~~~~~
configure:6253: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:6253: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -std=c99 -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c:69:9: error: unknown type name 'wchar_t'
   const wchar_t *name;
         ^~~~~~~
configure:6253: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:6253: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c99 -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: error: unrecognized command line option '-c99'
configure:6253: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:6253: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -AC99 -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
<command-line>:0:1: error: missing '(' after predicate
conftest.c:69:9: error: unknown type name 'wchar_t'
   const wchar_t *name;
         ^~~~~~~
configure:6253: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:6253: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -D_STDC_C99= -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c:69:9: error: unknown type name 'wchar_t'
   const wchar_t *name;
         ^~~~~~~
configure:6253: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:6253: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -qlanglvl=extc99 -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: error: unrecognized command line option '-qlanglvl=extc99'
configure:6253: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:6269: result: unsupported
configure:6279: checking for /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc option to accept ISO C89
configure:6355: result: none needed
configure:6374: checking for /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc option to accept ISO Standard C
configure:6385: result: none needed
configure:6394: checking for grep that handles long lines and -e
configure:6452: result: /bin/grep
configure:6457: checking whether make sets $(MAKE)
configure:6479: result: yes
configure:6488: checking for a sed that does not truncate output
configure:6552: result: /bin/sed
configure:6559: checking for fold
configure:6577: found /usr/bin/fold
configure:6589: result: /usr/bin/fold
configure:6643: checking how to print strings
configure:6670: result: printf
configure:6691: checking for a sed that does not truncate output
configure:6755: result: /bin/sed
configure:6773: checking for fgrep
configure:6835: result: /bin/grep -F
configure:6870: checking for ld used by /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc
configure:6937: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ld
configure:6944: checking if the linker (/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ld) is GNU ld
configure:6959: result: yes
configure:6971: checking for BSD- or MS-compatible name lister (nm)
configure:7025: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-nm
configure:7155: checking the name lister (/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-nm) interface
configure:7162: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:7165: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-nm "conftest.o"
configure:7168: output
00000000 B some_variable
configure:7175: result: BSD nm
configure:7178: checking whether ln -s works
configure:7182: result: yes
configure:7190: checking the maximum length of command line arguments
configure:7321: result: 1572864
configure:7369: checking how to convert x86_64-pc-linux-gnu file names to arm-buildroot-linux-uclibcgnueabihf format
configure:7409: result: func_convert_file_noop
configure:7416: checking how to convert x86_64-pc-linux-gnu file names to toolchain format
configure:7436: result: func_convert_file_noop
configure:7443: checking for /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ld option to reload object files
configure:7450: result: -r
configure:7484: checking for arm-buildroot-linux-uclibcgnueabihf-objdump
configure:7511: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-objdump
configure:7583: checking how to recognize dependent libraries
configure:7783: result: pass_all
configure:7828: checking for arm-buildroot-linux-uclibcgnueabihf-dlltool
configure:7858: result: no
configure:7868: checking for dlltool
configure:7898: result: no
configure:7928: checking how to associate runtime and link libraries
configure:7955: result: printf %s\n
configure:7971: checking for arm-buildroot-linux-uclibcgnueabihf-ar
configure:7998: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ar
configure:8079: checking for archiver @FILE support
configure:8096: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:8096: $? = 0
configure:8099: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ar cru libconftest.a @conftest.lst >&5
configure:8102: $? = 0
configure:8107: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ar cru libconftest.a @conftest.lst >&5
/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ar: conftest.o: No such file or directory
configure:8110: $? = 1
configure:8122: result: @
configure:8140: checking for arm-buildroot-linux-uclibcgnueabihf-strip
configure:8167: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-strip
configure:8239: checking for arm-buildroot-linux-uclibcgnueabihf-ranlib
configure:8266: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ranlib
configure:8408: checking command to parse /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-nm output from /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc object
configure:8561: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:8564: $? = 0
configure:8568: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-nm conftest.o \| sed -n -e 's/^.*[ ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:8571: $? = 0
configure:8637: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c conftstm.o >&5
configure:8640: $? = 0
configure:8678: result: ok
configure:8725: checking for sysroot
configure:8755: result: no
configure:8762: checking for a working dd
configure:8800: result: /bin/dd
configure:8804: checking how to truncate binary pipes
configure:8819: result: /bin/dd bs=4096 count=1
configure:9108: checking for arm-buildroot-linux-uclibcgnueabihf-mt
configure:9138: result: no
configure:9148: checking for mt
configure:9164: found /bin/mt
configure:9175: result: mt
configure:9187: WARNING: using cross tools not prefixed with host triplet
configure:9198: checking if mt is a manifest tool
configure:9204: mt '-?'
configure:9212: result: no
configure:9886: checking for dlfcn.h
configure:9886: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:9886: $? = 0
configure:9886: result: yes
configure:10142: checking for objdir
configure:10157: result: .libs
configure:10417: checking if /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc supports -fno-rtti -fno-exceptions
configure:10435: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -fno-rtti -fno-exceptions conftest.c >&5
cc1: warning: command line option '-fno-rtti' is valid for C++/ObjC++ but not for C
configure:10439: $? = 0
configure:10452: result: no
configure:10810: checking for /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc option to produce PIC
configure:10817: result: -fPIC -DPIC
configure:10825: checking if /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc PIC flag -fPIC -DPIC works
configure:10843: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -fPIC -DPIC -DPIC conftest.c >&5
configure:10847: $? = 0
configure:10860: result: yes
configure:10889: checking if /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc static flag -static works
configure:10917: result: yes
configure:10932: checking if /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc supports -c -o file.o
configure:10953: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -o out/conftest2.o conftest.c >&5
configure:10957: $? = 0
configure:10979: result: yes
configure:10987: checking if /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc supports -c -o file.o
configure:11034: result: yes
configure:11067: checking whether the /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc linker (/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ld) supports shared libraries
configure:12326: result: yes
configure:12363: checking whether -lc should be explicitly linked in
configure:12371: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:12374: $? = 0
configure:12389: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -shared  -fPIC -DPIC conftest.o  -v -Wl,-soname -Wl,conftest -o conftest 2\>\&1 \| /bin/grep  -lc  \>/dev/null 2\>\&1
configure:12392: $? = 0
configure:12406: result: no
configure:12566: checking dynamic linker characteristics
configure:13147: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Wl,-rpath -Wl,/foo conftest.c  >&5
configure:13147: $? = 0
configure:13384: result: GNU/Linux ld.so
configure:13506: checking how to hardcode library paths into programs
configure:13531: result: immediate
configure:14079: checking whether stripping libraries is possible
configure:14084: result: yes
configure:14119: checking if libtool supports shared libraries
configure:14121: result: yes
configure:14124: checking whether to build shared libraries
configure:14149: result: yes
configure:14152: checking whether to build static libraries
configure:14156: result: no
configure:14198: checking for arm-buildroot-linux-uclibcgnueabihf-objcopy
configure:14225: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-objcopy
configure:14304: checking for pgrep
configure:14322: found /usr/bin/pgrep
configure:14335: result: /usr/bin/pgrep
configure:14357: checking for bison
configure:14373: found /usr/bin/bison
configure:14384: result: bison -y
configure:14405: checking for bison version
configure:14414: result: 3.0.4
configure:14516: checking for flex
configure:14532: found /usr/bin/flex
configure:14543: result: flex
configure:14581: flex conftest.l
configure:14585: $? = 0
configure:14587: checking lex output file root
configure:14601: result: lex.yy
configure:14606: checking lex library
configure:14620: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c   >&5
/tmp/cc3Kwf4v.o: In function `yylex':
conftest.c:(.text+0x9b8): undefined reference to `yywrap'
conftest.c:(.text+0xc98): undefined reference to `yywrap'
/tmp/cc3Kwf4v.o: In function `main':
conftest.c:(.text.startup+0xc): undefined reference to `yywrap'
collect2: error: ld returned 1 exit status
configure:14620: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 0
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern yy_size_t yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| yy_size_t yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| #if defined(__GNUC__) && __GNUC__ >= 3
| __attribute__((__noreturn__))
| #endif
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_uint16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_uint16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 484 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * _in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * _out_str  );
| 
| yy_size_t yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput (int c,char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		size_t n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 710 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 817 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	yy_size_t number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (yy_size_t) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			yy_size_t num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((int) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		yy_size_t number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = (yy_size_t)size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	yy_size_t i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
| 			(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| yy_size_t yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:14620: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lfl  >&5
/home/epl/Jan_7/Linux-Test-Framework/output/host/lib/gcc/arm-buildroot-linux-uclibcgnueabihf/6.4.0/../../../../arm-buildroot-linux-uclibcgnueabihf/bin/ld: cannot find -lfl
collect2: error: ld returned 1 exit status
configure:14620: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 0
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern yy_size_t yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| yy_size_t yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| #if defined(__GNUC__) && __GNUC__ >= 3
| __attribute__((__noreturn__))
| #endif
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_uint16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_uint16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 484 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * _in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * _out_str  );
| 
| yy_size_t yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput (int c,char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		size_t n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 710 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 817 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	yy_size_t number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (yy_size_t) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			yy_size_t num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((int) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		yy_size_t number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = (yy_size_t)size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	yy_size_t i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
| 			(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| yy_size_t yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:14620: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -ll  >&5
/home/epl/Jan_7/Linux-Test-Framework/output/host/lib/gcc/arm-buildroot-linux-uclibcgnueabihf/6.4.0/../../../../arm-buildroot-linux-uclibcgnueabihf/bin/ld: cannot find -ll
collect2: error: ld returned 1 exit status
configure:14620: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 0
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern yy_size_t yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| yy_size_t yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| #if defined(__GNUC__) && __GNUC__ >= 3
| __attribute__((__noreturn__))
| #endif
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_uint16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_uint16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 484 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * _in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * _out_str  );
| 
| yy_size_t yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput (int c,char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		size_t n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 710 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 817 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	yy_size_t number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (yy_size_t) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			yy_size_t num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((int) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		yy_size_t number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = (yy_size_t)size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	yy_size_t i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
| 			(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| yy_size_t yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:14630: result: none needed
configure:14636: checking whether yytext is a pointer
configure:14653: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c   >&5
/tmp/cch9Vdck.o: In function `yylex':
conftest.c:(.text+0x9b8): undefined reference to `yywrap'
conftest.c:(.text+0xc98): undefined reference to `yywrap'
/tmp/cch9Vdck.o: In function `main':
conftest.c:(.text.startup+0xc): undefined reference to `yywrap'
collect2: error: ld returned 1 exit status
configure:14653: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| 
|   #define YYTEXT_POINTER 1
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 0
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern yy_size_t yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| yy_size_t yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| #if defined(__GNUC__) && __GNUC__ >= 3
| __attribute__((__noreturn__))
| #endif
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_uint16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_uint16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 484 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * _in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * _out_str  );
| 
| yy_size_t yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput (int c,char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		size_t n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 710 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 817 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	yy_size_t number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (yy_size_t) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			yy_size_t num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((int) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		yy_size_t number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = (yy_size_t)size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	yy_size_t i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
| 			(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| yy_size_t yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:14661: result: no
configure:14680: checking for flex version
configure:14689: result: 2.6.0
configure:14788: checking for inline
configure:14804: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14804: $? = 0
configure:14812: result: inline
configure:14830: checking for int32_t
configure:14830: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14830: $? = 0
configure:14830: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c: In function 'main':
conftest.c:66:53: warning: integer overflow in expression [-Woverflow]
    < (int32_t) (((((int32_t) 1 << N) << N) - 1) * 2 + 2))];
                                                     ^
conftest.c:65:12: error: storage size of 'test_array' isn't constant
 static int test_array [1 - 2 * !((int32_t) (((((int32_t) 1 << N) << N) - 1) * 2 + 1)
            ^~~~~~~~~~
configure:14830: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| 	        enum { N = 32 / 2 - 1 };
| int
| main ()
| {
| static int test_array [1 - 2 * !((int32_t) (((((int32_t) 1 << N) << N) - 1) * 2 + 1)
| 		 < (int32_t) (((((int32_t) 1 << N) << N) - 1) * 2 + 2))];
| test_array [0] = 0;
| return test_array [0];
| 
|   ;
|   return 0;
| }
configure:14830: result: yes
configure:14841: checking for int64_t
configure:14841: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14841: $? = 0
configure:14841: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c: In function 'main':
conftest.c:66:53: warning: integer overflow in expression [-Woverflow]
    < (int64_t) (((((int64_t) 1 << N) << N) - 1) * 2 + 2))];
                                                     ^
conftest.c:65:12: error: storage size of 'test_array' isn't constant
 static int test_array [1 - 2 * !((int64_t) (((((int64_t) 1 << N) << N) - 1) * 2 + 1)
            ^~~~~~~~~~
configure:14841: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| 	        enum { N = 64 / 2 - 1 };
| int
| main ()
| {
| static int test_array [1 - 2 * !((int64_t) (((((int64_t) 1 << N) << N) - 1) * 2 + 1)
| 		 < (int64_t) (((((int64_t) 1 << N) << N) - 1) * 2 + 2))];
| test_array [0] = 0;
| return test_array [0];
| 
|   ;
|   return 0;
| }
configure:14841: result: yes
configure:14852: checking for mode_t
configure:14852: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14852: $? = 0
configure:14852: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c: In function 'main':
conftest.c:64:21: error: expected expression before ')' token
 if (sizeof ((mode_t)))
                     ^
configure:14852: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((mode_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14852: result: yes
configure:14863: checking for off_t
configure:14863: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14863: $? = 0
configure:14863: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c: In function 'main':
conftest.c:64:20: error: expected expression before ')' token
 if (sizeof ((off_t)))
                    ^
configure:14863: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((off_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14863: result: yes
configure:14874: checking for pid_t
configure:14874: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14874: $? = 0
configure:14874: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c: In function 'main':
conftest.c:64:20: error: expected expression before ')' token
 if (sizeof ((pid_t)))
                    ^
configure:14874: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((pid_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14874: result: yes
configure:14885: checking for size_t
configure:14885: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14885: $? = 0
configure:14885: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c: In function 'main':
conftest.c:64:21: error: expected expression before ')' token
 if (sizeof ((size_t)))
                     ^
configure:14885: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((size_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14885: result: yes
configure:14896: checking for ssize_t
configure:14896: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14896: $? = 0
configure:14896: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
conftest.c: In function 'main':
conftest.c:64:22: error: expected expression before ')' token
 if (sizeof ((ssize_t)))
                      ^
configure:14896: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((ssize_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14896: result: yes
configure:14907: checking for uid_t in sys/types.h
configure:14926: result: yes
configure:14937: checking for uint16_t
configure:14937: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14937: $? = 0
configure:14937: result: yes
configure:14949: checking for uint32_t
configure:14949: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14949: $? = 0
configure:14949: result: yes
configure:14963: checking for uint64_t
configure:14963: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14963: $? = 0
configure:14963: result: yes
configure:14977: checking for uint8_t
configure:14977: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:14977: $? = 0
configure:14977: result: yes
configure:14993: checking for __attribute__
configure:15015: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15015: $? = 0
configure:15024: result: yes
configure:15150: checking if compiler needs -Werror to reject unknown flags
configure:15166: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -Werror -Wunknown-warning-option -Wsizeof-array-argument -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
arm-buildroot-linux-uclibcgnueabihf-gcc.br_real: error: unrecognized command line option '-Wunknown-warning-option'; did you mean '-Wno-warning-token'?
configure:15166: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| /* end confdefs.h.  */
| int foo(void);
| int
| main ()
| {
| foo()
|   ;
|   return 0;
| }
configure:15171: result: no
configure:15237: checking for the pthreads library -lpthreads
configure:15275: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os    -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lpthreads  >&5
/home/epl/Jan_7/Linux-Test-Framework/output/host/lib/gcc/arm-buildroot-linux-uclibcgnueabihf/6.4.0/../../../../arm-buildroot-linux-uclibcgnueabihf/bin/ld: cannot find -lpthreads
collect2: error: ld returned 1 exit status
configure:15275: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| /* end confdefs.h.  */
| #include <pthread.h>
|                         static void routine(void *a) { a = 0; }
|                         static void *start_routine(void *a) { return a; }
| int
| main ()
| {
| pthread_t th; pthread_attr_t attr;
|                         pthread_create(&th, 0, start_routine, 0);
|                         pthread_join(th, 0);
|                         pthread_attr_init(&attr);
|                         pthread_cleanup_push(routine, 0);
|                         pthread_cleanup_pop(0) /* ; */
|   ;
|   return 0;
| }
configure:15284: result: no
configure:15182: checking whether pthreads work without any flags
configure:15275: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os    -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c   >&5
configure:15275: $? = 0
configure:15284: result: yes
configure:15303: checking for joinable pthread attribute
configure:15318: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c   >&5
configure:15318: $? = 0
configure:15324: result: PTHREAD_CREATE_JOINABLE
configure:15334: checking if more special flags are required for pthreads
configure:15349: result: no
configure:15355: checking for PTHREAD_PRIO_INHERIT
configure:15372: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c   >&5
configure:15372: $? = 0
configure:15381: result: yes
configure:15482: checking for library containing gethostbyname
configure:15513: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15513: $? = 0
configure:15530: result: none required
configure:15538: checking for library containing socket
configure:15569: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15569: $? = 0
configure:15586: result: none required
configure:15728: checking for occurence(s) of link_all_deplibs = no in ./m4/libtool.m4
configure:15741: result: none
configure:15766: checking for sys/types.h
configure:15766: result: yes
configure:15766: checking for unistd.h
configure:15766: result: yes
configure:15766: checking fcntl.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking fcntl.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for fcntl.h
configure:15766: result: yes
configure:15766: checking for string.h
configure:15766: result: yes
configure:15766: checking pthread.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking pthread.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for pthread.h
configure:15766: result: yes
configure:15766: checking limits.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking limits.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for limits.h
configure:15766: result: yes
configure:15766: checking signal.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking signal.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for signal.h
configure:15766: result: yes
configure:15766: checking for stdlib.h
configure:15766: result: yes
configure:15766: checking sys/un.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/un.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/un.h
configure:15766: result: yes
configure:15766: checking sys/socket.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/socket.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/socket.h
configure:15766: result: yes
configure:15766: checking for stdlib.h
configure:15766: result: yes
configure:15766: checking stdio.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking stdio.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for stdio.h
configure:15766: result: yes
configure:15766: checking getopt.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking getopt.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for getopt.h
configure:15766: result: yes
configure:15766: checking sys/ipc.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/ipc.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/ipc.h
configure:15766: result: yes
configure:15766: checking sys/shm.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/shm.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/shm.h
configure:15766: result: yes
configure:15766: checking popt.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking popt.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for popt.h
configure:15766: result: yes
configure:15766: checking grp.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking grp.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for grp.h
configure:15766: result: yes
configure:15766: checking arpa/inet.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking arpa/inet.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for arpa/inet.h
configure:15766: result: yes
configure:15766: checking netdb.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking netdb.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for netdb.h
configure:15766: result: yes
configure:15766: checking netinet/in.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking netinet/in.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for netinet/in.h
configure:15766: result: yes
configure:15766: checking paths.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking paths.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for paths.h
configure:15766: result: yes
configure:15766: checking stddef.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking stddef.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for stddef.h
configure:15766: result: yes
configure:15766: checking sys/file.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/file.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/file.h
configure:15766: result: yes
configure:15766: checking sys/ioctl.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/ioctl.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/ioctl.h
configure:15766: result: yes
configure:15766: checking sys/mount.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/mount.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/mount.h
configure:15766: result: yes
configure:15766: checking sys/param.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/param.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/param.h
configure:15766: result: yes
configure:15766: checking sys/time.h usability
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking sys/time.h presence
configure:15766: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:15766: $? = 0
configure:15766: result: yes
configure:15766: checking for sys/time.h
configure:15766: result: yes
configure:15788: checking for atexit
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for bzero
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:87:6: warning: conflicting types for built-in function 'bzero'
 char bzero ();
      ^~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for clock_gettime
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for dup2
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for fdatasync
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for fls
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
/tmp/ccyFAYMb.o: In function `main':
conftest.c:(.text.startup+0x4): undefined reference to `fls'
collect2: error: ld returned 1 exit status
configure:15788: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define VERSION_MAJOR 2
| #define VERSION_MINOR 10
| #define VERSION_PATCHLEVEL 1
| #define VERSION_NAME "KeKriek"
| #define VERSION_DESCRIPTION "From Brasserie Dunham, a sour mashed golden wheat ale fermented with local sour cherries from Tougas orchards. Fresh sweet cherry notes with some tartness, lively carbonation with a dry finish."
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_STRING_H 1
| #define HAVE_PTHREAD_H 1
| #define HAVE_LIMITS_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_SYS_UN_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_GETOPT_H 1
| #define HAVE_SYS_IPC_H 1
| #define HAVE_SYS_SHM_H 1
| #define HAVE_POPT_H 1
| #define HAVE_GRP_H 1
| #define HAVE_ARPA_INET_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_PATHS_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_SYS_FILE_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_MOUNT_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_ATEXIT 1
| #define HAVE_BZERO 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_DUP2 1
| #define HAVE_FDATASYNC 1
| /* end confdefs.h.  */
| /* Define fls to an innocuous variant, in case <limits.h> declares fls.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define fls innocuous_fls
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char fls (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef fls
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char fls ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_fls || defined __stub___fls
| choke me
| #endif
| 
| int
| main ()
| {
| return fls ();
|   ;
|   return 0;
| }
configure:15788: result: no
configure:15788: checking for ftruncate
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for gethostbyname
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for gethostname
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for getpagesize
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for localtime_r
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for memchr
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:96:6: warning: conflicting types for built-in function 'memchr'
 char memchr ();
      ^~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for memset
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:97:6: warning: conflicting types for built-in function 'memset'
 char memset ();
      ^~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for mkdir
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for munmap
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for putenv
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for realpath
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for rmdir
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for socket
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strchr
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:104:6: warning: conflicting types for built-in function 'strchr'
 char strchr ();
      ^~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strcspn
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:105:6: warning: conflicting types for built-in function 'strcspn'
 char strcspn ();
      ^~~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strdup
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:106:6: warning: conflicting types for built-in function 'strdup'
 char strdup ();
      ^~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strncasecmp
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:107:6: warning: conflicting types for built-in function 'strncasecmp'
 char strncasecmp ();
      ^~~~~~~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strndup
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:108:6: warning: conflicting types for built-in function 'strndup'
 char strndup ();
      ^~~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strnlen
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strpbrk
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:110:6: warning: conflicting types for built-in function 'strpbrk'
 char strpbrk ();
      ^~~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strrchr
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:111:6: warning: conflicting types for built-in function 'strrchr'
 char strrchr ();
      ^~~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strstr
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
conftest.c:112:6: warning: conflicting types for built-in function 'strstr'
 char strstr ();
      ^~~~~~
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strtol
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strtoul
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for strtoull
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for dirfd
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for gethostbyname2
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for getipnodebyname
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
/tmp/ccJISPGU.o: In function `main':
conftest.c:(.text.startup+0x4): undefined reference to `getipnodebyname'
collect2: error: ld returned 1 exit status
configure:15788: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define VERSION_MAJOR 2
| #define VERSION_MINOR 10
| #define VERSION_PATCHLEVEL 1
| #define VERSION_NAME "KeKriek"
| #define VERSION_DESCRIPTION "From Brasserie Dunham, a sour mashed golden wheat ale fermented with local sour cherries from Tougas orchards. Fresh sweet cherry notes with some tartness, lively carbonation with a dry finish."
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_STRING_H 1
| #define HAVE_PTHREAD_H 1
| #define HAVE_LIMITS_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_SYS_UN_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_GETOPT_H 1
| #define HAVE_SYS_IPC_H 1
| #define HAVE_SYS_SHM_H 1
| #define HAVE_POPT_H 1
| #define HAVE_GRP_H 1
| #define HAVE_ARPA_INET_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_PATHS_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_SYS_FILE_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_MOUNT_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_ATEXIT 1
| #define HAVE_BZERO 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_DUP2 1
| #define HAVE_FDATASYNC 1
| #define HAVE_FTRUNCATE 1
| #define HAVE_GETHOSTBYNAME 1
| #define HAVE_GETHOSTNAME 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_LOCALTIME_R 1
| #define HAVE_MEMCHR 1
| #define HAVE_MEMSET 1
| #define HAVE_MKDIR 1
| #define HAVE_MUNMAP 1
| #define HAVE_PUTENV 1
| #define HAVE_REALPATH 1
| #define HAVE_RMDIR 1
| #define HAVE_SOCKET 1
| #define HAVE_STRCHR 1
| #define HAVE_STRCSPN 1
| #define HAVE_STRDUP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_STRNDUP 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRPBRK 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOULL 1
| #define HAVE_DIRFD 1
| #define HAVE_GETHOSTBYNAME2 1
| /* end confdefs.h.  */
| /* Define getipnodebyname to an innocuous variant, in case <limits.h> declares getipnodebyname.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define getipnodebyname innocuous_getipnodebyname
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char getipnodebyname (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef getipnodebyname
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char getipnodebyname ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_getipnodebyname || defined __stub___getipnodebyname
| choke me
| #endif
| 
| int
| main ()
| {
| return getipnodebyname ();
|   ;
|   return 0;
| }
configure:15788: result: no
configure:15788: checking for epoll_create1
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for sched_getcpu
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for sysconf
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15788: checking for sync_file_range
configure:15788: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c  >&5
configure:15788: $? = 0
configure:15788: result: yes
configure:15800: checking for clock_gettime, timer_create, timer_settime, timer_delete in -lrt
configure:15825: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lrt   >&5
configure:15825: $? = 0
configure:15834: result: yes
configure:15847: checking for dlopen in -ldl
configure:15872: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -ldl  -lrt  >&5
configure:15872: $? = 0
configure:15881: result: yes
configure:15945: checking for dlmopen in -ldl
configure:15970: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -ldl  -lrt  >&5
/tmp/cchfG18m.o: In function `main':
conftest.c:(.text.startup+0x4): undefined reference to `dlmopen'
collect2: error: ld returned 1 exit status
configure:15970: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define VERSION_MAJOR 2
| #define VERSION_MINOR 10
| #define VERSION_PATCHLEVEL 1
| #define VERSION_NAME "KeKriek"
| #define VERSION_DESCRIPTION "From Brasserie Dunham, a sour mashed golden wheat ale fermented with local sour cherries from Tougas orchards. Fresh sweet cherry notes with some tartness, lively carbonation with a dry finish."
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_STRING_H 1
| #define HAVE_PTHREAD_H 1
| #define HAVE_LIMITS_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_SYS_UN_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_GETOPT_H 1
| #define HAVE_SYS_IPC_H 1
| #define HAVE_SYS_SHM_H 1
| #define HAVE_POPT_H 1
| #define HAVE_GRP_H 1
| #define HAVE_ARPA_INET_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_PATHS_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_SYS_FILE_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_MOUNT_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_ATEXIT 1
| #define HAVE_BZERO 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_DUP2 1
| #define HAVE_FDATASYNC 1
| #define HAVE_FTRUNCATE 1
| #define HAVE_GETHOSTBYNAME 1
| #define HAVE_GETHOSTNAME 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_LOCALTIME_R 1
| #define HAVE_MEMCHR 1
| #define HAVE_MEMSET 1
| #define HAVE_MKDIR 1
| #define HAVE_MUNMAP 1
| #define HAVE_PUTENV 1
| #define HAVE_REALPATH 1
| #define HAVE_RMDIR 1
| #define HAVE_SOCKET 1
| #define HAVE_STRCHR 1
| #define HAVE_STRCSPN 1
| #define HAVE_STRDUP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_STRNDUP 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRPBRK 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOULL 1
| #define HAVE_DIRFD 1
| #define HAVE_GETHOSTBYNAME2 1
| #define HAVE_EPOLL_CREATE1 1
| #define HAVE_SCHED_GETCPU 1
| #define HAVE_SYSCONF 1
| #define HAVE_SYNC_FILE_RANGE 1
| #define HAVE_LIBRT 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char dlmopen ();
| int
| main ()
| {
| return dlmopen ();
|   ;
|   return 0;
| }
configure:15980: result: no
configure:16841: checking pkg-config is at least version 0.9.0
configure:16844: result: yes
configure:16854: checking for POPT
configure:16861: $PKG_CONFIG --exists --print-errors "popt"
configure:16864: $? = 0
configure:16878: $PKG_CONFIG --exists --print-errors "popt"
configure:16881: $? = 0
configure:17027: result: yes
configure:17036: checking for libxml2
configure:17043: $PKG_CONFIG --exists --print-errors "libxml-2.0 >= 2.7.6"
configure:17046: $? = 0
configure:17060: $PKG_CONFIG --exists --print-errors "libxml-2.0 >= 2.7.6"
configure:17063: $? = 0
configure:17121: result: yes
configure:17130: checking for uuid_generate
configure:17130: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lrt  >&5
/tmp/cc0E8DfC.o: In function `main':
conftest.c:(.text.startup+0x4): undefined reference to `uuid_generate'
collect2: error: ld returned 1 exit status
configure:17130: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define VERSION_MAJOR 2
| #define VERSION_MINOR 10
| #define VERSION_PATCHLEVEL 1
| #define VERSION_NAME "KeKriek"
| #define VERSION_DESCRIPTION "From Brasserie Dunham, a sour mashed golden wheat ale fermented with local sour cherries from Tougas orchards. Fresh sweet cherry notes with some tartness, lively carbonation with a dry finish."
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_STRING_H 1
| #define HAVE_PTHREAD_H 1
| #define HAVE_LIMITS_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_SYS_UN_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_GETOPT_H 1
| #define HAVE_SYS_IPC_H 1
| #define HAVE_SYS_SHM_H 1
| #define HAVE_POPT_H 1
| #define HAVE_GRP_H 1
| #define HAVE_ARPA_INET_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_PATHS_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_SYS_FILE_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_MOUNT_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_ATEXIT 1
| #define HAVE_BZERO 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_DUP2 1
| #define HAVE_FDATASYNC 1
| #define HAVE_FTRUNCATE 1
| #define HAVE_GETHOSTBYNAME 1
| #define HAVE_GETHOSTNAME 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_LOCALTIME_R 1
| #define HAVE_MEMCHR 1
| #define HAVE_MEMSET 1
| #define HAVE_MKDIR 1
| #define HAVE_MUNMAP 1
| #define HAVE_PUTENV 1
| #define HAVE_REALPATH 1
| #define HAVE_RMDIR 1
| #define HAVE_SOCKET 1
| #define HAVE_STRCHR 1
| #define HAVE_STRCSPN 1
| #define HAVE_STRDUP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_STRNDUP 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRPBRK 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOULL 1
| #define HAVE_DIRFD 1
| #define HAVE_GETHOSTBYNAME2 1
| #define HAVE_EPOLL_CREATE1 1
| #define HAVE_SCHED_GETCPU 1
| #define HAVE_SYSCONF 1
| #define HAVE_SYNC_FILE_RANGE 1
| #define HAVE_LIBRT 1
| #define CONFIG_CONSUMERD32_BIN ""
| #define CONFIG_CONSUMERD64_BIN ""
| #define CONFIG_CONSUMERD32_LIBDIR ""
| #define CONFIG_CONSUMERD64_LIBDIR ""
| #define CONFIG_BABELTRACE_BIN ""
| #define CONFIG_LTTV_GUI_BIN ""
| #define CONFIG_SESSIOND_BIN ""
| #define CONFIG_LTTNG_SYSTEM_RUNDIR "/var/run/lttng"
| #define CONFIG_DEFAULT_AGENT_TCP_PORT 5345
| #define CONFIG_DEFAULT_APP_SOCKET_RW_TIMEOUT 5
| #define CONFIG_DEFAULT_CHANNEL_SUBBUF_SIZE 16384
| #define CONFIG_DEFAULT_CHANNEL_TRACEFILE_COUNT 0
| #define CONFIG_DEFAULT_CHANNEL_TRACEFILE_SIZE 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_READ_TIMER 200000
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_SIZE 1048576
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_LTTNG_LIVE_TIMER 1000000
| #define CONFIG_DEFAULT_METADATA_CACHE_SIZE 4096
| #define CONFIG_DEFAULT_METADATA_READ_TIMER 0
| #define CONFIG_DEFAULT_METADATA_SUBBUF_NUM 2
| #define CONFIG_DEFAULT_METADATA_SUBBUF_SIZE 4096
| #define CONFIG_DEFAULT_METADATA_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_NETWORK_CONTROL_PORT 5342
| #define CONFIG_DEFAULT_NETWORK_DATA_PORT 5343
| #define CONFIG_DEFAULT_NETWORK_VIEWER_PORT 5344
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_READ_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_SIZE 16384
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_READ_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_SIZE 524288
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_AGENT_BIND_ADDRESS "localhost"
| #define CONFIG_DEFAULT_NETWORK_CONTROL_BIND_ADDRESS "0.0.0.0"
| #define CONFIG_DEFAULT_NETWORK_DATA_BIND_ADDRESS "0.0.0.0"
| #define CONFIG_DEFAULT_NETWORK_VIEWER_BIND_ADDRESS "localhost"
| #define CONFIG_CMD_DESCR_ADD_CONTEXT "Add context fields to a channel"
| #define CONFIG_CMD_DESCR_CREATE "Create a tracing session"
| #define CONFIG_CMD_DESCR_DESTROY "Tear down tracing sessions"
| #define CONFIG_CMD_DESCR_DISABLE_CHANNEL "Disable tracing channels"
| #define CONFIG_CMD_DESCR_DISABLE_EVENT "Disable event rules"
| #define CONFIG_CMD_DESCR_ENABLE_CHANNEL "Create or enable tracing channels"
| #define CONFIG_CMD_DESCR_ENABLE_EVENT "Create or enable event rules"
| #define CONFIG_CMD_DESCR_HELP "Display help information about a command"
| #define CONFIG_CMD_DESCR_LIST "List tracing sessions, domains, channels, and events"
| #define CONFIG_CMD_DESCR_LOAD "Load tracing session configurations"
| #define CONFIG_CMD_DESCR_REGENERATE "Manage an LTTng tracing session's data regeneration"
| #define CONFIG_CMD_DESCR_SAVE "Save tracing session configurations"
| #define CONFIG_CMD_DESCR_SET_SESSION "Set current tracing session"
| #define CONFIG_CMD_DESCR_SNAPSHOT "Snapshot buffers of current tracing session"
| #define CONFIG_CMD_DESCR_START "Start tracing"
| #define CONFIG_CMD_DESCR_STATUS "Get the status of the current tracing session"
| #define CONFIG_CMD_DESCR_STOP "Stop tracing"
| #define CONFIG_CMD_DESCR_TRACK "Track specific system resources"
| #define CONFIG_CMD_DESCR_UNTRACK "Untrack specific system resources"
| #define CONFIG_CMD_DESCR_VERSION "Show version information"
| #define CONFIG_CMD_DESCR_VIEW "Start trace viewer"
| #define CONFIG_LTTNG_SYSTEM_CONFIGDIR "/etc"
| #define CONFIG_LTTNG_SYSTEM_DATADIR "/usr/share"
| /* end confdefs.h.  */
| /* Define uuid_generate to an innocuous variant, in case <limits.h> declares uuid_generate.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define uuid_generate innocuous_uuid_generate
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char uuid_generate (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef uuid_generate
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char uuid_generate ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_uuid_generate || defined __stub___uuid_generate
| choke me
| #endif
| 
| int
| main ()
| {
| return uuid_generate ();
|   ;
|   return 0;
| }
configure:17130: result: no
configure:17146: checking for UUID
configure:17153: $PKG_CONFIG --exists --print-errors "uuid"
configure:17156: $? = 0
configure:17170: $PKG_CONFIG --exists --print-errors "uuid"
configure:17173: $? = 0
configure:17425: result: yes
configure:17439: checking for clock_gettime
configure:17439: result: yes
configure:17453: checking whether cds_list_add is declared
configure:17453: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17453: $? = 0
configure:17453: result: yes
configure:17461: checking whether cds_wfcq_init is declared
configure:17461: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17461: $? = 0
configure:17461: result: yes
configure:17469: checking whether cds_wfcq_dequeue_blocking is declared
configure:17469: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17469: $? = 0
configure:17469: result: yes
configure:17477: checking whether futex_async is declared
configure:17477: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17477: $? = 0
configure:17477: result: yes
configure:17485: checking whether rcu_thread_offline is declared
configure:17485: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17485: $? = 0
configure:17485: result: yes
configure:17493: checking whether rcu_thread_online is declared
configure:17493: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17493: $? = 0
configure:17493: result: yes
configure:17501: checking whether caa_likely is declared
configure:17501: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17501: $? = 0
configure:17501: result: yes
configure:17509: checking for _cds_lfht_new in -lurcu-cds
configure:17534: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lurcu-cds  -lrt  >&5
configure:17534: $? = 0
configure:17543: result: yes
configure:17558: checking whether cmm_smp_mb__before_uatomic_or is declared
configure:17558: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:17558: $? = 0
configure:17558: result: yes
configure:17583: checking for kmod_module_probe_insert_module in -lkmod
configure:17608: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lkmod  -lurcu-cds -lrt  >&5
/home/epl/Jan_7/Linux-Test-Framework/output/host/lib/gcc/arm-buildroot-linux-uclibcgnueabihf/6.4.0/../../../../arm-buildroot-linux-uclibcgnueabihf/bin/ld: cannot find -lkmod
collect2: error: ld returned 1 exit status
configure:17608: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define VERSION_MAJOR 2
| #define VERSION_MINOR 10
| #define VERSION_PATCHLEVEL 1
| #define VERSION_NAME "KeKriek"
| #define VERSION_DESCRIPTION "From Brasserie Dunham, a sour mashed golden wheat ale fermented with local sour cherries from Tougas orchards. Fresh sweet cherry notes with some tartness, lively carbonation with a dry finish."
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_STRING_H 1
| #define HAVE_PTHREAD_H 1
| #define HAVE_LIMITS_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_SYS_UN_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_GETOPT_H 1
| #define HAVE_SYS_IPC_H 1
| #define HAVE_SYS_SHM_H 1
| #define HAVE_POPT_H 1
| #define HAVE_GRP_H 1
| #define HAVE_ARPA_INET_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_PATHS_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_SYS_FILE_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_MOUNT_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_ATEXIT 1
| #define HAVE_BZERO 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_DUP2 1
| #define HAVE_FDATASYNC 1
| #define HAVE_FTRUNCATE 1
| #define HAVE_GETHOSTBYNAME 1
| #define HAVE_GETHOSTNAME 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_LOCALTIME_R 1
| #define HAVE_MEMCHR 1
| #define HAVE_MEMSET 1
| #define HAVE_MKDIR 1
| #define HAVE_MUNMAP 1
| #define HAVE_PUTENV 1
| #define HAVE_REALPATH 1
| #define HAVE_RMDIR 1
| #define HAVE_SOCKET 1
| #define HAVE_STRCHR 1
| #define HAVE_STRCSPN 1
| #define HAVE_STRDUP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_STRNDUP 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRPBRK 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOULL 1
| #define HAVE_DIRFD 1
| #define HAVE_GETHOSTBYNAME2 1
| #define HAVE_EPOLL_CREATE1 1
| #define HAVE_SCHED_GETCPU 1
| #define HAVE_SYSCONF 1
| #define HAVE_SYNC_FILE_RANGE 1
| #define HAVE_LIBRT 1
| #define CONFIG_CONSUMERD32_BIN ""
| #define CONFIG_CONSUMERD64_BIN ""
| #define CONFIG_CONSUMERD32_LIBDIR ""
| #define CONFIG_CONSUMERD64_LIBDIR ""
| #define CONFIG_BABELTRACE_BIN ""
| #define CONFIG_LTTV_GUI_BIN ""
| #define CONFIG_SESSIOND_BIN ""
| #define CONFIG_LTTNG_SYSTEM_RUNDIR "/var/run/lttng"
| #define CONFIG_DEFAULT_AGENT_TCP_PORT 5345
| #define CONFIG_DEFAULT_APP_SOCKET_RW_TIMEOUT 5
| #define CONFIG_DEFAULT_CHANNEL_SUBBUF_SIZE 16384
| #define CONFIG_DEFAULT_CHANNEL_TRACEFILE_COUNT 0
| #define CONFIG_DEFAULT_CHANNEL_TRACEFILE_SIZE 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_READ_TIMER 200000
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_SIZE 1048576
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_LTTNG_LIVE_TIMER 1000000
| #define CONFIG_DEFAULT_METADATA_CACHE_SIZE 4096
| #define CONFIG_DEFAULT_METADATA_READ_TIMER 0
| #define CONFIG_DEFAULT_METADATA_SUBBUF_NUM 2
| #define CONFIG_DEFAULT_METADATA_SUBBUF_SIZE 4096
| #define CONFIG_DEFAULT_METADATA_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_NETWORK_CONTROL_PORT 5342
| #define CONFIG_DEFAULT_NETWORK_DATA_PORT 5343
| #define CONFIG_DEFAULT_NETWORK_VIEWER_PORT 5344
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_READ_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_SIZE 16384
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_READ_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_SIZE 524288
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_AGENT_BIND_ADDRESS "localhost"
| #define CONFIG_DEFAULT_NETWORK_CONTROL_BIND_ADDRESS "0.0.0.0"
| #define CONFIG_DEFAULT_NETWORK_DATA_BIND_ADDRESS "0.0.0.0"
| #define CONFIG_DEFAULT_NETWORK_VIEWER_BIND_ADDRESS "localhost"
| #define CONFIG_CMD_DESCR_ADD_CONTEXT "Add context fields to a channel"
| #define CONFIG_CMD_DESCR_CREATE "Create a tracing session"
| #define CONFIG_CMD_DESCR_DESTROY "Tear down tracing sessions"
| #define CONFIG_CMD_DESCR_DISABLE_CHANNEL "Disable tracing channels"
| #define CONFIG_CMD_DESCR_DISABLE_EVENT "Disable event rules"
| #define CONFIG_CMD_DESCR_ENABLE_CHANNEL "Create or enable tracing channels"
| #define CONFIG_CMD_DESCR_ENABLE_EVENT "Create or enable event rules"
| #define CONFIG_CMD_DESCR_HELP "Display help information about a command"
| #define CONFIG_CMD_DESCR_LIST "List tracing sessions, domains, channels, and events"
| #define CONFIG_CMD_DESCR_LOAD "Load tracing session configurations"
| #define CONFIG_CMD_DESCR_REGENERATE "Manage an LTTng tracing session's data regeneration"
| #define CONFIG_CMD_DESCR_SAVE "Save tracing session configurations"
| #define CONFIG_CMD_DESCR_SET_SESSION "Set current tracing session"
| #define CONFIG_CMD_DESCR_SNAPSHOT "Snapshot buffers of current tracing session"
| #define CONFIG_CMD_DESCR_START "Start tracing"
| #define CONFIG_CMD_DESCR_STATUS "Get the status of the current tracing session"
| #define CONFIG_CMD_DESCR_STOP "Stop tracing"
| #define CONFIG_CMD_DESCR_TRACK "Track specific system resources"
| #define CONFIG_CMD_DESCR_UNTRACK "Untrack specific system resources"
| #define CONFIG_CMD_DESCR_VERSION "Show version information"
| #define CONFIG_CMD_DESCR_VIEW "Start trace viewer"
| #define CONFIG_LTTNG_SYSTEM_CONFIGDIR "/etc"
| #define CONFIG_LTTNG_SYSTEM_DATADIR "/usr/share"
| #define LTTNG_HAVE_LIBUUID 1
| #define LTTNG_HAVE_CLOCK_GETTIME 1
| #define HAVE_LIBURCU_CDS 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char kmod_module_probe_insert_module ();
| int
| main ()
| {
| return kmod_module_probe_insert_module ();
|   ;
|   return 0;
| }
configure:17617: result: no
configure:17725: checking for dlopen in -ldl
configure:17759: result: yes
configure:17819: checking for fmemopen in -lc
configure:17844: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lc  -lurcu-cds -lrt  >&5
configure:17844: $? = 0
configure:17853: result: yes
configure:17868: checking for open_memstream in -lc
configure:17893: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lc  -lurcu-cds -lrt  >&5
configure:17893: $? = 0
configure:17902: result: yes
configure:17917: checking for pfm_initialize in -lpfm
configure:17942: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  conftest.c -lpfm  -lurcu-cds -lrt  >&5
/home/epl/Jan_7/Linux-Test-Framework/output/host/lib/gcc/arm-buildroot-linux-uclibcgnueabihf/6.4.0/../../../../arm-buildroot-linux-uclibcgnueabihf/bin/ld: cannot find -lpfm
collect2: error: ld returned 1 exit status
configure:17942: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "lttng-tools"
| #define PACKAGE_TARNAME "lttng-tools"
| #define PACKAGE_VERSION "2.10.1"
| #define PACKAGE_STRING "lttng-tools 2.10.1"
| #define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
| #define PACKAGE_URL "https://lttng.org"
| #define PACKAGE "lttng-tools"
| #define VERSION "2.10.1"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define __EXTENSIONS__ 1
| #define _ALL_SOURCE 1
| #define _GNU_SOURCE 1
| #define _POSIX_PTHREAD_SEMANTICS 1
| #define _TANDEM_SOURCE 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE___ATTRIBUTE__ 1
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define VERSION_MAJOR 2
| #define VERSION_MINOR 10
| #define VERSION_PATCHLEVEL 1
| #define VERSION_NAME "KeKriek"
| #define VERSION_DESCRIPTION "From Brasserie Dunham, a sour mashed golden wheat ale fermented with local sour cherries from Tougas orchards. Fresh sweet cherry notes with some tartness, lively carbonation with a dry finish."
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_STRING_H 1
| #define HAVE_PTHREAD_H 1
| #define HAVE_LIMITS_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_SYS_UN_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_GETOPT_H 1
| #define HAVE_SYS_IPC_H 1
| #define HAVE_SYS_SHM_H 1
| #define HAVE_POPT_H 1
| #define HAVE_GRP_H 1
| #define HAVE_ARPA_INET_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_PATHS_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_SYS_FILE_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_MOUNT_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_ATEXIT 1
| #define HAVE_BZERO 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_DUP2 1
| #define HAVE_FDATASYNC 1
| #define HAVE_FTRUNCATE 1
| #define HAVE_GETHOSTBYNAME 1
| #define HAVE_GETHOSTNAME 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_LOCALTIME_R 1
| #define HAVE_MEMCHR 1
| #define HAVE_MEMSET 1
| #define HAVE_MKDIR 1
| #define HAVE_MUNMAP 1
| #define HAVE_PUTENV 1
| #define HAVE_REALPATH 1
| #define HAVE_RMDIR 1
| #define HAVE_SOCKET 1
| #define HAVE_STRCHR 1
| #define HAVE_STRCSPN 1
| #define HAVE_STRDUP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_STRNDUP 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRPBRK 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOULL 1
| #define HAVE_DIRFD 1
| #define HAVE_GETHOSTBYNAME2 1
| #define HAVE_EPOLL_CREATE1 1
| #define HAVE_SCHED_GETCPU 1
| #define HAVE_SYSCONF 1
| #define HAVE_SYNC_FILE_RANGE 1
| #define HAVE_LIBRT 1
| #define CONFIG_CONSUMERD32_BIN ""
| #define CONFIG_CONSUMERD64_BIN ""
| #define CONFIG_CONSUMERD32_LIBDIR ""
| #define CONFIG_CONSUMERD64_LIBDIR ""
| #define CONFIG_BABELTRACE_BIN ""
| #define CONFIG_LTTV_GUI_BIN ""
| #define CONFIG_SESSIOND_BIN ""
| #define CONFIG_LTTNG_SYSTEM_RUNDIR "/var/run/lttng"
| #define CONFIG_DEFAULT_AGENT_TCP_PORT 5345
| #define CONFIG_DEFAULT_APP_SOCKET_RW_TIMEOUT 5
| #define CONFIG_DEFAULT_CHANNEL_SUBBUF_SIZE 16384
| #define CONFIG_DEFAULT_CHANNEL_TRACEFILE_COUNT 0
| #define CONFIG_DEFAULT_CHANNEL_TRACEFILE_SIZE 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_READ_TIMER 200000
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_SIZE 1048576
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_KERNEL_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_LTTNG_LIVE_TIMER 1000000
| #define CONFIG_DEFAULT_METADATA_CACHE_SIZE 4096
| #define CONFIG_DEFAULT_METADATA_READ_TIMER 0
| #define CONFIG_DEFAULT_METADATA_SUBBUF_NUM 2
| #define CONFIG_DEFAULT_METADATA_SUBBUF_SIZE 4096
| #define CONFIG_DEFAULT_METADATA_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_NETWORK_CONTROL_PORT 5342
| #define CONFIG_DEFAULT_NETWORK_DATA_PORT 5343
| #define CONFIG_DEFAULT_NETWORK_VIEWER_PORT 5344
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_READ_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_SIZE 16384
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_UST_PID_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_LIVE_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_READ_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_BLOCKING_TIMEOUT 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_NUM 4
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_SIZE 524288
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_SWITCH_TIMER 0
| #define CONFIG_DEFAULT_UST_UID_CHANNEL_MONITOR_TIMER 1000000
| #define CONFIG_DEFAULT_AGENT_BIND_ADDRESS "localhost"
| #define CONFIG_DEFAULT_NETWORK_CONTROL_BIND_ADDRESS "0.0.0.0"
| #define CONFIG_DEFAULT_NETWORK_DATA_BIND_ADDRESS "0.0.0.0"
| #define CONFIG_DEFAULT_NETWORK_VIEWER_BIND_ADDRESS "localhost"
| #define CONFIG_CMD_DESCR_ADD_CONTEXT "Add context fields to a channel"
| #define CONFIG_CMD_DESCR_CREATE "Create a tracing session"
| #define CONFIG_CMD_DESCR_DESTROY "Tear down tracing sessions"
| #define CONFIG_CMD_DESCR_DISABLE_CHANNEL "Disable tracing channels"
| #define CONFIG_CMD_DESCR_DISABLE_EVENT "Disable event rules"
| #define CONFIG_CMD_DESCR_ENABLE_CHANNEL "Create or enable tracing channels"
| #define CONFIG_CMD_DESCR_ENABLE_EVENT "Create or enable event rules"
| #define CONFIG_CMD_DESCR_HELP "Display help information about a command"
| #define CONFIG_CMD_DESCR_LIST "List tracing sessions, domains, channels, and events"
| #define CONFIG_CMD_DESCR_LOAD "Load tracing session configurations"
| #define CONFIG_CMD_DESCR_REGENERATE "Manage an LTTng tracing session's data regeneration"
| #define CONFIG_CMD_DESCR_SAVE "Save tracing session configurations"
| #define CONFIG_CMD_DESCR_SET_SESSION "Set current tracing session"
| #define CONFIG_CMD_DESCR_SNAPSHOT "Snapshot buffers of current tracing session"
| #define CONFIG_CMD_DESCR_START "Start tracing"
| #define CONFIG_CMD_DESCR_STATUS "Get the status of the current tracing session"
| #define CONFIG_CMD_DESCR_STOP "Stop tracing"
| #define CONFIG_CMD_DESCR_TRACK "Track specific system resources"
| #define CONFIG_CMD_DESCR_UNTRACK "Untrack specific system resources"
| #define CONFIG_CMD_DESCR_VERSION "Show version information"
| #define CONFIG_CMD_DESCR_VIEW "Start trace viewer"
| #define CONFIG_LTTNG_SYSTEM_CONFIGDIR "/etc"
| #define CONFIG_LTTNG_SYSTEM_DATADIR "/usr/share"
| #define LTTNG_HAVE_LIBUUID 1
| #define LTTNG_HAVE_CLOCK_GETTIME 1
| #define HAVE_LIBURCU_CDS 1
| #define LTTNG_HAVE_FMEMOPEN 1
| #define LTTNG_HAVE_OPEN_MEMSTREAM 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char pfm_initialize ();
| int
| main ()
| {
| return pfm_initialize ();
|   ;
|   return 0;
| }
configure:17951: result: no
configure:18457: You may configure with --enable-python-bindings if you want Python bindings.
configure:18464: checking linux/version.h usability
configure:18464: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c >&5
configure:18464: $? = 0
configure:18464: result: yes
configure:18464: checking linux/version.h presence
configure:18464: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 conftest.c
configure:18464: $? = 0
configure:18464: result: yes
configure:18464: checking for linux/version.h
configure:18464: result: yes
configure:18470: checking for Linux epoll(7) interface
configure:18496: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -DHAVE_LINUX_VERSION_H  conftest.c -lurcu-cds -lrt  >&5
configure:18496: $? = 0
configure:18507: result: yes
configure:19873: checking for python2
configure:19891: found /usr/bin/python2
configure:19903: result: /usr/bin/python2
configure:19921: checking for python2 lttng-ust agent
configure:19932: result: no
configure:19963: checking for python3
configure:19981: found /usr/bin/python3
configure:19993: result: /usr/bin/python3
configure:20011: checking for python3 lttng-ust agent
configure:20022: result: no
configure:20507: checking that generated files are newer than configure
configure:20513: result: done
configure:20688: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by lttng-tools config.status 2.10.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on ERS-EPL-DS-E06995E6B25F

config.status:1549: creating Makefile
config.status:1549: creating doc/Makefile
config.status:1549: creating doc/man/Makefile
config.status:1549: creating doc/man/asciidoc-attrs.conf
config.status:1549: creating include/Makefile
config.status:1549: creating extras/Makefile
config.status:1549: creating extras/bindings/Makefile
config.status:1549: creating extras/bindings/swig/Makefile
config.status:1549: creating extras/bindings/swig/python/Makefile
config.status:1549: creating extras/core-handler/Makefile
config.status:1549: creating src/Makefile
config.status:1549: creating src/common/Makefile
config.status:1549: creating src/common/kernel-ctl/Makefile
config.status:1549: creating src/common/kernel-consumer/Makefile
config.status:1549: creating src/common/consumer/Makefile
config.status:1549: creating src/common/ust-consumer/Makefile
config.status:1549: creating src/common/hashtable/Makefile
config.status:1549: creating src/common/sessiond-comm/Makefile
config.status:1549: creating src/common/compat/Makefile
config.status:1549: creating src/common/relayd/Makefile
config.status:1549: creating src/common/testpoint/Makefile
config.status:1549: creating src/common/index/Makefile
config.status:1549: creating src/common/health/Makefile
config.status:1549: creating src/common/config/Makefile
config.status:1549: creating src/common/string-utils/Makefile
config.status:1549: creating src/lib/Makefile
config.status:1549: creating src/lib/lttng-ctl/Makefile
config.status:1549: creating src/lib/lttng-ctl/filter/Makefile
config.status:1549: creating src/lib/lttng-ctl/lttng-ctl.pc
config.status:1549: creating src/bin/Makefile
config.status:1549: creating src/bin/lttng-consumerd/Makefile
config.status:1549: creating src/bin/lttng-sessiond/Makefile
config.status:1549: creating src/bin/lttng-relayd/Makefile
config.status:1549: creating src/bin/lttng/Makefile
config.status:1549: creating src/bin/lttng-crash/Makefile
config.status:1549: creating tests/Makefile
config.status:1549: creating tests/destructive/Makefile
config.status:1549: creating tests/regression/Makefile
config.status:1549: creating tests/regression/kernel/Makefile
config.status:1549: creating tests/regression/tools/Makefile
config.status:1549: creating tests/regression/tools/streaming/Makefile
config.status:1549: creating tests/regression/tools/filtering/Makefile
config.status:1549: creating tests/regression/tools/health/Makefile
config.status:1549: creating tests/regression/tools/tracefile-limits/Makefile
config.status:1549: creating tests/regression/tools/snapshots/Makefile
config.status:1549: creating tests/regression/tools/live/Makefile
config.status:1549: creating tests/regression/tools/exclusion/Makefile
config.status:1549: creating tests/regression/tools/save-load/Makefile
config.status:1549: creating tests/regression/tools/save-load/configuration/Makefile
config.status:1549: creating tests/regression/tools/mi/Makefile
config.status:1549: creating tests/regression/tools/wildcard/Makefile
config.status:1549: creating tests/regression/tools/crash/Makefile
config.status:1549: creating tests/regression/tools/regen-metadata/Makefile
config.status:1549: creating tests/regression/tools/regen-statedump/Makefile
config.status:1549: creating tests/regression/tools/notification/Makefile
config.status:1549: creating tests/regression/ust/Makefile
config.status:1549: creating tests/regression/ust/nprocesses/Makefile
config.status:1549: creating tests/regression/ust/high-throughput/Makefile
config.status:1549: creating tests/regression/ust/low-throughput/Makefile
config.status:1549: creating tests/regression/ust/before-after/Makefile
config.status:1549: creating tests/regression/ust/buffers-pid/Makefile
config.status:1549: creating tests/regression/ust/periodical-metadata-flush/Makefile
config.status:1549: creating tests/regression/ust/multi-session/Makefile
config.status:1549: creating tests/regression/ust/overlap/Makefile
config.status:1549: creating tests/regression/ust/overlap/demo/Makefile
config.status:1549: creating tests/regression/ust/linking/Makefile
config.status:1549: creating tests/regression/ust/daemon/Makefile
config.status:1549: creating tests/regression/ust/exit-fast/Makefile
config.status:1549: creating tests/regression/ust/fork/Makefile
config.status:1549: creating tests/regression/ust/libc-wrapper/Makefile
config.status:1549: creating tests/regression/ust/baddr-statedump/Makefile
config.status:1549: creating tests/regression/ust/ust-dl/Makefile
config.status:1549: creating tests/regression/ust/java-jul/Makefile
config.status:1549: creating tests/regression/ust/java-log4j/Makefile
config.status:1549: creating tests/regression/ust/python-logging/Makefile
config.status:1549: creating tests/regression/ust/getcpu-override/Makefile
config.status:1549: creating tests/regression/ust/clock-override/Makefile
config.status:1549: creating tests/regression/ust/type-declarations/Makefile
config.status:1549: creating tests/regression/ust/rotation-destroy-flush/Makefile
config.status:1549: creating tests/regression/ust/blocking/Makefile
config.status:1549: creating tests/stress/Makefile
config.status:1549: creating tests/unit/Makefile
config.status:1549: creating tests/unit/ini_config/Makefile
config.status:1549: creating tests/perf/Makefile
config.status:1549: creating tests/utils/Makefile
config.status:1549: creating tests/utils/tap/Makefile
config.status:1549: creating tests/utils/testapp/Makefile
config.status:1549: creating tests/utils/testapp/gen-ust-events/Makefile
config.status:1549: creating tests/utils/testapp/gen-ust-nevents/Makefile
config.status:1549: creating tests/utils/testapp/gen-ust-nevents-str/Makefile
config.status:1549: creating tests/utils/testapp/gen-ust-tracef/Makefile
config.status:1549: creating tests/regression/ust/python-logging/test_python_logging
config.status:1549: creating tests/perf/test_perf_raw
config.status:1549: creating tests/regression/ust/ust-dl/test_ust-dl
config.status:1549: creating include/config.h
config.status:1778: executing depfiles commands
config.status:1778: executing libtool commands
configure:22924: WARNING: unrecognized options: --disable-gtk-doc, --disable-gtk-doc-html, --disable-doc, --disable-docs, --disable-documentation, --with-xmlto, --with-fop, --enable-ipv6, --disable-nls
configure:22942: checking for tput
configure:22960: found /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/tput
configure:22972: result: /home/epl/Jan_7/Linux-Test-Framework/output/host/bin/tput

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-pc-linux-gnu
ac_cv_c_bigendian=no
ac_cv_c_compiler_gnu=yes
ac_cv_c_inline=inline
ac_cv_c_int32_t=yes
ac_cv_c_int64_t=yes
ac_cv_c_uint16_t=yes
ac_cv_c_uint32_t=yes
ac_cv_c_uint64_t=yes
ac_cv_c_uint8_t=yes
ac_cv_env_CC_set=set
ac_cv_env_CC_value=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc
ac_cv_env_CFLAGS_set=set
ac_cv_env_CFLAGS_value='-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os '
ac_cv_env_CPPFLAGS_set=set
ac_cv_env_CPPFLAGS_value='-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64'
ac_cv_env_CPP_set=set
ac_cv_env_CPP_value=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp
ac_cv_env_LDFLAGS_set=set
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_LT_SYS_LIBRARY_PATH_set=
ac_cv_env_LT_SYS_LIBRARY_PATH_value=
ac_cv_env_PKG_CONFIG_LIBDIR_set=
ac_cv_env_PKG_CONFIG_LIBDIR_value=
ac_cv_env_PKG_CONFIG_PATH_set=
ac_cv_env_PKG_CONFIG_PATH_value=
ac_cv_env_PKG_CONFIG_set=set
ac_cv_env_PKG_CONFIG_value=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/pkg-config
ac_cv_env_POPT_CFLAGS_set=
ac_cv_env_POPT_CFLAGS_value=
ac_cv_env_POPT_LIBS_set=
ac_cv_env_POPT_LIBS_value=
ac_cv_env_PYTHON_CONFIG_set=
ac_cv_env_PYTHON_CONFIG_value=
ac_cv_env_PYTHON_INCLUDE_set=
ac_cv_env_PYTHON_INCLUDE_value=
ac_cv_env_PYTHON_set=
ac_cv_env_PYTHON_value=
ac_cv_env_UUID_CFLAGS_set=
ac_cv_env_UUID_CFLAGS_value=
ac_cv_env_UUID_LIBS_set=
ac_cv_env_UUID_LIBS_value=
ac_cv_env_YACC_set=
ac_cv_env_YACC_value=
ac_cv_env_YFLAGS_set=
ac_cv_env_YFLAGS_value=
ac_cv_env_build_alias_set=set
ac_cv_env_build_alias_value=x86_64-pc-linux-gnu
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=arm-buildroot-linux-uclibcgnueabihf
ac_cv_env_libxml2_CFLAGS_set=
ac_cv_env_libxml2_CFLAGS_value=
ac_cv_env_libxml2_LIBS_set=
ac_cv_env_libxml2_LIBS_value=
ac_cv_env_target_alias_set=set
ac_cv_env_target_alias_value=arm-buildroot-linux-uclibcgnueabihf
ac_cv_func_atexit=yes
ac_cv_func_bzero=yes
ac_cv_func_calloc_0_nonnull=yes
ac_cv_func_clock_gettime=yes
ac_cv_func_dirfd=yes
ac_cv_func_dup2=yes
ac_cv_func_epoll_create1=yes
ac_cv_func_fdatasync=yes
ac_cv_func_fls=no
ac_cv_func_ftruncate=yes
ac_cv_func_gethostbyname2=yes
ac_cv_func_gethostbyname=yes
ac_cv_func_gethostname=yes
ac_cv_func_getipnodebyname=no
ac_cv_func_getpagesize=yes
ac_cv_func_localtime_r=yes
ac_cv_func_malloc_0_nonnull=yes
ac_cv_func_memchr=yes
ac_cv_func_memcmp_working=yes
ac_cv_func_memset=yes
ac_cv_func_mkdir=yes
ac_cv_func_mmap_fixed_mapped=yes
ac_cv_func_munmap=yes
ac_cv_func_putenv=yes
ac_cv_func_realloc_0_nonnull=yes
ac_cv_func_realpath=yes
ac_cv_func_rmdir=yes
ac_cv_func_sched_getcpu=yes
ac_cv_func_socket=yes
ac_cv_func_strchr=yes
ac_cv_func_strcspn=yes
ac_cv_func_strdup=yes
ac_cv_func_strncasecmp=yes
ac_cv_func_strndup=yes
ac_cv_func_strnlen=yes
ac_cv_func_strpbrk=yes
ac_cv_func_strrchr=yes
ac_cv_func_strstr=yes
ac_cv_func_strtol=yes
ac_cv_func_strtoul=yes
ac_cv_func_strtoull=yes
ac_cv_func_sync_file_range=yes
ac_cv_func_sysconf=yes
ac_cv_func_uuid_generate=no
ac_cv_have_decl_caa_likely=yes
ac_cv_have_decl_cds_list_add=yes
ac_cv_have_decl_cds_wfcq_dequeue_blocking=yes
ac_cv_have_decl_cds_wfcq_init=yes
ac_cv_have_decl_cmm_smp_mb__before_uatomic_or=yes
ac_cv_have_decl_futex_async=yes
ac_cv_have_decl_malloc=yes
ac_cv_have_decl_rcu_thread_offline=yes
ac_cv_have_decl_rcu_thread_online=yes
ac_cv_header_arpa_inet_h=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_fcntl_h=yes
ac_cv_header_getopt_h=yes
ac_cv_header_grp_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_limits_h=yes
ac_cv_header_linux_version_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_minix_config_h=no
ac_cv_header_netdb_h=yes
ac_cv_header_netinet_in_h=yes
ac_cv_header_paths_h=yes
ac_cv_header_popt_h=yes
ac_cv_header_pthread_h=yes
ac_cv_header_signal_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stddef_h=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdio_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_file_h=yes
ac_cv_header_sys_ioctl_h=yes
ac_cv_header_sys_ipc_h=yes
ac_cv_header_sys_mount_h=yes
ac_cv_header_sys_param_h=yes
ac_cv_header_sys_shm_h=yes
ac_cv_header_sys_socket_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_time_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_sys_un_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=arm-buildroot-linux-uclibcgnueabihf
ac_cv_lbl_unaligned_fail=yes
ac_cv_lib_c_fmemopen=yes
ac_cv_lib_c_open_memstream=yes
ac_cv_lib_dl___dlmopen=no
ac_cv_lib_dl_dlopen=yes
ac_cv_lib_kmod_kmod_module_probe_insert_module=no
ac_cv_lib_lex='none needed'
ac_cv_lib_pfm_pfm_initialize=no
ac_cv_lib_rt_clock_gettime__timer_create__timer_settime__timer_delete=yes
ac_cv_lib_urcu_cds__cds_lfht_new=yes
ac_cv_objext=o
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_FGREP='/bin/grep -F'
ac_cv_path_GREP=/bin/grep
ac_cv_path_PGREP=/usr/bin/pgrep
ac_cv_path_PYTHON2_BIN=/usr/bin/python2
ac_cv_path_PYTHON3_BIN=/usr/bin/python3
ac_cv_path_SED=/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_lt_DD=/bin/dd
ac_cv_path_mkdir=/bin/mkdir
ac_cv_path_pprint_tput=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/tput
ac_cv_path_report_fold=/usr/bin/fold
ac_cv_prog_AR=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ar
ac_cv_prog_AWK=gawk
ac_cv_prog_CC=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc
ac_cv_prog_CPP=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp
ac_cv_prog_LEX=flex
ac_cv_prog_OBJCOPY=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-objcopy
ac_cv_prog_OBJDUMP=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-objdump
ac_cv_prog_RANLIB=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ranlib
ac_cv_prog_STRIP=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-strip
ac_cv_prog_YACC='bison -y'
ac_cv_prog_ac_ct_MANIFEST_TOOL=mt
ac_cv_prog_cc_c89=
ac_cv_prog_cc_c99=no
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_prog_lex_root=lex.yy
ac_cv_prog_lex_yytext_pointer=no
ac_cv_prog_make_make_set=yes
ac_cv_safe_to_define___extensions__=yes
ac_cv_search_gethostbyname='none required'
ac_cv_search_socket='none required'
ac_cv_sys_file_offset_bits=no
ac_cv_sys_largefile_CC=no
ac_cv_target=arm-buildroot-linux-uclibcgnueabihf
ac_cv_type_mode_t=yes
ac_cv_type_off_t=yes
ac_cv_type_pid_t=yes
ac_cv_type_size_t=yes
ac_cv_type_ssize_t=yes
ac_cv_type_uid_t=yes
am_cv_CC_dependencies_compiler_type=none
am_cv_make_support_nested_variables=yes
am_cv_prog_cc_c_o=yes
am_cv_prog_tar_pax=gnutar
ax_cv_PTHREAD_PRIO_INHERIT=yes
ax_cv___attribute__=yes
ax_cv_have_epoll=yes
gl_cv_func_malloc_0_nonnull=yes
lt_cv_ar_at_file=@
lt_cv_archive_cmds_need_lc=no
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ld
lt_cv_path_NM=/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-nm
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_rtti_exceptions=no
lt_cv_prog_compiler_static_works=yes
lt_cv_prog_gnu_ld=yes
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_shlibpath_overrides_runpath=no
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=
lt_cv_sys_lib_search_path_spec=
lt_cv_sys_max_cmd_len=1572864
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop
lt_cv_truncate_bin='/bin/dd bs=4096 count=1'
pkg_cv_POPT_CFLAGS='-I/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/include  '
pkg_cv_POPT_LIBS='-L/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/lib -lpopt  '
pkg_cv_UUID_CFLAGS='-I/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/include/uuid  '
pkg_cv_UUID_LIBS='-L/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/lib -luuid  '
pkg_cv_libxml2_CFLAGS='-I/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/include/libxml2  '
pkg_cv_libxml2_LIBS='-L/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/lib -lxml2  '

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /home/epl/Jan_7/Linux-Test-Framework/output/build/lttng-tools-2.10.1/config/missing aclocal-1.15'
AMDEPBACKSLASH=''
AMDEP_FALSE=''
AMDEP_TRUE='#'
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_CFLAGS='-Wall -fno-strict-aliasing '
AM_CPPFLAGS='-I$(top_srcdir)/include -I$(top_builddir)/include -I$(top_srcdir)/src -include config.h '
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='0'
AM_V='$(V)'
AR='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ar'
ASCIIDOC=''
AUTOCONF='${SHELL} /home/epl/Jan_7/Linux-Test-Framework/output/build/lttng-tools-2.10.1/config/missing autoconf'
AUTOHEADER='${SHELL} /home/epl/Jan_7/Linux-Test-Framework/output/build/lttng-tools-2.10.1/config/missing autoheader'
AUTOMAKE='${SHELL} /home/epl/Jan_7/Linux-Test-Framework/output/build/lttng-tools-2.10.1/config/missing automake-1.15'
AWK='gawk'
BABELTRACE_BIN=''
BISON_VERSION='3.0.4'
BUILD_BIN_LTTNG_CONSUMERD_FALSE='#'
BUILD_BIN_LTTNG_CONSUMERD_TRUE=''
BUILD_BIN_LTTNG_CRASH_FALSE='#'
BUILD_BIN_LTTNG_CRASH_TRUE=''
BUILD_BIN_LTTNG_FALSE='#'
BUILD_BIN_LTTNG_RELAYD_FALSE='#'
BUILD_BIN_LTTNG_RELAYD_TRUE=''
BUILD_BIN_LTTNG_SESSIOND_FALSE='#'
BUILD_BIN_LTTNG_SESSIOND_TRUE=''
BUILD_BIN_LTTNG_TRUE=''
BUILD_EXTRAS_FALSE='#'
BUILD_EXTRAS_TRUE=''
BUILD_LIB_COMPAT_FALSE='#'
BUILD_LIB_COMPAT_TRUE=''
BUILD_LIB_CONFIG_FALSE='#'
BUILD_LIB_CONFIG_TRUE=''
BUILD_LIB_CONSUMER_FALSE='#'
BUILD_LIB_CONSUMER_TRUE=''
BUILD_LIB_HASHTABLE_FALSE='#'
BUILD_LIB_HASHTABLE_TRUE=''
BUILD_LIB_HEALTH_FALSE='#'
BUILD_LIB_HEALTH_TRUE=''
BUILD_LIB_INDEX_FALSE='#'
BUILD_LIB_INDEX_TRUE=''
BUILD_LIB_KERNEL_CONSUMER_FALSE='#'
BUILD_LIB_KERNEL_CONSUMER_TRUE=''
BUILD_LIB_KERNEL_CTL_FALSE='#'
BUILD_LIB_KERNEL_CTL_TRUE=''
BUILD_LIB_LTTNG_CTL_FALSE='#'
BUILD_LIB_LTTNG_CTL_TRUE=''
BUILD_LIB_RELAYD_FALSE='#'
BUILD_LIB_RELAYD_TRUE=''
BUILD_LIB_SESSIOND_COMM_FALSE='#'
BUILD_LIB_SESSIOND_COMM_TRUE=''
BUILD_LIB_TESTPOINT_FALSE='#'
BUILD_LIB_TESTPOINT_TRUE=''
BUILD_LIB_UST_CONSUMER_FALSE=''
BUILD_LIB_UST_CONSUMER_TRUE='#'
BUILD_TESTS_FALSE='#'
BUILD_TESTS_TRUE=''
CC='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc'
CCDEPMODE='depmode=none'
CFLAGS='-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os '
CMD_DESCR_ADD_CONTEXT='Add context fields to a channel'
CMD_DESCR_CREATE='Create a tracing session'
CMD_DESCR_DESTROY='Tear down tracing sessions'
CMD_DESCR_DISABLE_CHANNEL='Disable tracing channels'
CMD_DESCR_DISABLE_EVENT='Disable event rules'
CMD_DESCR_ENABLE_CHANNEL='Create or enable tracing channels'
CMD_DESCR_ENABLE_EVENT='Create or enable event rules'
CMD_DESCR_HELP='Display help information about a command'
CMD_DESCR_LIST='List tracing sessions, domains, channels, and events'
CMD_DESCR_LOAD='Load tracing session configurations'
CMD_DESCR_REGENERATE='Manage an LTTng tracing session'\''s data regeneration'
CMD_DESCR_SAVE='Save tracing session configurations'
CMD_DESCR_SET_SESSION='Set current tracing session'
CMD_DESCR_SNAPSHOT='Snapshot buffers of current tracing session'
CMD_DESCR_START='Start tracing'
CMD_DESCR_STATUS='Get the status of the current tracing session'
CMD_DESCR_STOP='Stop tracing'
CMD_DESCR_TRACK='Track specific system resources'
CMD_DESCR_UNTRACK='Untrack specific system resources'
CMD_DESCR_VERSION='Show version information'
CMD_DESCR_VIEW='Start trace viewer'
COMPAT_EPOLL_FALSE='#'
COMPAT_EPOLL_TRUE=''
CONFDIR='/etc'
CONFIG_LTTNG_SYSTEM_DATADIR='/usr/share'
CONSUMERD32_BIN=''
CONSUMERD32_LIBDIR=''
CONSUMERD64_BIN=''
CONSUMERD64_LIBDIR=''
CPP='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-cpp'
CPPFLAGS='-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64'
CYGPATH_W='echo'
DEFAULT_AGENT_BIND_ADDRESS='localhost'
DEFAULT_AGENT_TCP_PORT='5345'
DEFAULT_APP_SOCKET_RW_TIMEOUT='5'
DEFAULT_CHANNEL_SUBBUF_SIZE='16384'
DEFAULT_CHANNEL_TRACEFILE_COUNT='0'
DEFAULT_CHANNEL_TRACEFILE_SIZE='0'
DEFAULT_KERNEL_CHANNEL_BLOCKING_TIMEOUT='0'
DEFAULT_KERNEL_CHANNEL_LIVE_TIMER='0'
DEFAULT_KERNEL_CHANNEL_MONITOR_TIMER='1000000'
DEFAULT_KERNEL_CHANNEL_READ_TIMER='200000'
DEFAULT_KERNEL_CHANNEL_SUBBUF_NUM='4'
DEFAULT_KERNEL_CHANNEL_SUBBUF_SIZE='1048576'
DEFAULT_KERNEL_CHANNEL_SWITCH_TIMER='0'
DEFAULT_LTTNG_LIVE_TIMER='1000000'
DEFAULT_METADATA_CACHE_SIZE='4096'
DEFAULT_METADATA_READ_TIMER='0'
DEFAULT_METADATA_SUBBUF_NUM='2'
DEFAULT_METADATA_SUBBUF_SIZE='4096'
DEFAULT_METADATA_SWITCH_TIMER='0'
DEFAULT_NETWORK_CONTROL_BIND_ADDRESS='0.0.0.0'
DEFAULT_NETWORK_CONTROL_PORT='5342'
DEFAULT_NETWORK_DATA_BIND_ADDRESS='0.0.0.0'
DEFAULT_NETWORK_DATA_PORT='5343'
DEFAULT_NETWORK_VIEWER_BIND_ADDRESS='localhost'
DEFAULT_NETWORK_VIEWER_PORT='5344'
DEFAULT_UST_PID_CHANNEL_BLOCKING_TIMEOUT='0'
DEFAULT_UST_PID_CHANNEL_LIVE_TIMER='0'
DEFAULT_UST_PID_CHANNEL_MONITOR_TIMER='1000000'
DEFAULT_UST_PID_CHANNEL_READ_TIMER='0'
DEFAULT_UST_PID_CHANNEL_SUBBUF_NUM='4'
DEFAULT_UST_PID_CHANNEL_SUBBUF_SIZE='16384'
DEFAULT_UST_PID_CHANNEL_SWITCH_TIMER='0'
DEFAULT_UST_UID_CHANNEL_BLOCKING_TIMEOUT='0'
DEFAULT_UST_UID_CHANNEL_LIVE_TIMER='0'
DEFAULT_UST_UID_CHANNEL_MONITOR_TIMER='1000000'
DEFAULT_UST_UID_CHANNEL_READ_TIMER='0'
DEFAULT_UST_UID_CHANNEL_SUBBUF_NUM='4'
DEFAULT_UST_UID_CHANNEL_SUBBUF_SIZE='524288'
DEFAULT_UST_UID_CHANNEL_SWITCH_TIMER='0'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DLLTOOL='false'
DL_LIBS='-ldl'
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/bin/grep -E'
EMBED_HELP_FALSE=''
EMBED_HELP_TRUE='#'
EXEEXT=''
FGREP='/bin/grep -F'
FLEX_VERSION='2.6.0'
GREP='/bin/grep'
HAVE_ASCIIDOC_XMLTO_FALSE=''
HAVE_ASCIIDOC_XMLTO_TRUE='#'
HAVE_BISON_FALSE='#'
HAVE_BISON_TRUE=''
HAVE_DLMOPEN='0'
HAVE_FLEX_FALSE='#'
HAVE_FLEX_TRUE=''
HAVE_LIBLTTNG_UST_CTL_FALSE=''
HAVE_LIBLTTNG_UST_CTL_TRUE='#'
HAVE_OBJCOPY_FALSE='#'
HAVE_OBJCOPY_TRUE=''
HAVE_PGREP_FALSE='#'
HAVE_PGREP_TRUE=''
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
IN_GIT_REPO_FALSE=''
IN_GIT_REPO_TRUE='#'
JAR=''
JAVA=''
JAVAC=''
JAVACFLAGS=''
JAVAFLAGS=''
JAVAPREFIX=''
KMOD_LIBS=''
LD='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ld'
LDFLAGS=''
LEX='flex'
LEXLIB=''
LEX_OUTPUT_ROOT='lex.yy'
LIBOBJS=''
LIBS='-lurcu-cds -lrt '
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
LTTNG_SYSTEM_RUNDIR='/var/run/lttng'
LTTNG_TOOLS_BUILD_GIT_SOURCE_FALSE='#'
LTTNG_TOOLS_BUILD_GIT_SOURCE_TRUE=''
LTTNG_TOOLS_BUILD_WITH_LIBPFM_FALSE=''
LTTNG_TOOLS_BUILD_WITH_LIBPFM_TRUE='#'
LTTV_GUI_BIN=''
LT_NO_UNDEFINED=''
LT_SYS_LIBRARY_PATH=''
MAINT=''
MAINTAINER_MODE_FALSE='#'
MAINTAINER_MODE_TRUE=''
MAJOR_VERSION='2'
MAKEINFO='${SHELL} /home/epl/Jan_7/Linux-Test-Framework/output/build/lttng-tools-2.10.1/config/missing makeinfo'
MANIFEST_TOOL=':'
MANPROG=''
MAN_PAGES_OPT_FALSE=''
MAN_PAGES_OPT_TRUE='#'
MINOR_VERSION='10'
MKDIR_P='/bin/mkdir -p'
NM='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-nm'
NMEDIT=''
NO_SHARED_FALSE=''
NO_SHARED_TRUE='#'
OBJCOPY='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-objcopy'
OBJDUMP='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-objdump'
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE='lttng-tools'
PACKAGE_BUGREPORT='jeremie.galarneau@efficios.com'
PACKAGE_NAME='lttng-tools'
PACKAGE_STRING='lttng-tools 2.10.1'
PACKAGE_TARNAME='lttng-tools'
PACKAGE_URL='https://lttng.org'
PACKAGE_VERSION='2.10.1'
PATCHLEVEL_VERSION='1'
PATH_SEPARATOR=':'
PGREP='/usr/bin/pgrep'
PKG_CONFIG='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/pkg-config'
PKG_CONFIG_LIBDIR=''
PKG_CONFIG_PATH=''
POPT_CFLAGS='-I/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/include  '
POPT_LIBS='-L/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/lib -lpopt  '
PTHREAD_CC='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-gcc'
PTHREAD_CFLAGS=''
PTHREAD_LIBS=''
PYTHON2_AGENT=''
PYTHON2_BIN='/usr/bin/python2'
PYTHON3_AGENT=''
PYTHON3_BIN='/usr/bin/python3'
PYTHON=''
PYTHON_BINDING_FALSE=''
PYTHON_BINDING_TRUE='#'
PYTHON_CONFIG=''
PYTHON_EXEC_PREFIX=''
PYTHON_INCLUDE=''
PYTHON_PLATFORM=''
PYTHON_PREFIX=''
PYTHON_VERSION=''
RANLIB='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-ranlib'
RUN_PYTHON_AGENT_TEST=''
SED='/bin/sed'
SESSIOND_BIN=''
SET_MAKE=''
SHELL='/bin/bash'
STRIP='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-strip'
SWIG=''
SWIG_LIB=''
TEST_JAVA_JUL_AGENT_FALSE=''
TEST_JAVA_JUL_AGENT_TRUE='#'
TEST_JAVA_LOG4J_AGENT_FALSE=''
TEST_JAVA_LOG4J_AGENT_TRUE='#'
UUDECODE=''
UUID_CFLAGS='-I/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/include/uuid  '
UUID_LIBS='-L/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/lib -luuid  '
VERSION='2.10.1'
XMLTO=''
YACC='bison -y'
YFLAGS=''
ac_ct_AR=''
ac_ct_CC=''
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE=''
am__fastdepCC_TRUE='#'
am__include='include'
am__isrc=''
am__leading_dot='.'
am__nodep=''
am__quote=''
am__tar='tar --format=posix -chf - "$$tardir"'
am__untar='tar -xf -'
ax_pthread_config=''
bindir='${exec_prefix}/bin'
build='x86_64-pc-linux-gnu'
build_alias='x86_64-pc-linux-gnu'
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='pc'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='/usr'
host='arm-buildroot-linux-uclibcgnueabihf'
host_alias='arm-buildroot-linux-uclibcgnueabihf'
host_cpu='arm'
host_os='linux-uclibcgnueabihf'
host_vendor='buildroot'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /home/epl/Jan_7/Linux-Test-Framework/output/build/lttng-tools-2.10.1/config/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
libxml2_CFLAGS='-I/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/include/libxml2  '
libxml2_LIBS='-L/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/../arm-buildroot-linux-uclibcgnueabihf/sysroot/usr/lib -lxml2  '
localedir='${datarootdir}/locale'
localstatedir='/var'
lttngactionincludedir='${prefix}/include/lttng/action'
lttngconditionincludedir='${prefix}/include/lttng/condition'
lttngincludedir='${prefix}/include/lttng'
lttnglibexecdir='${exec_prefix}/lib/lttng/libexec'
lttngnotificationincludedir='${prefix}/include/lttng/notification'
lttngtriggerincludedir='${prefix}/include/lttng/trigger'
man_prog_path=''
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
pkgpyexecdir=''
pkgpythondir=''
pprint_tput='/home/epl/Jan_7/Linux-Test-Framework/output/host/bin/tput'
prefix='/usr'
program_transform_name='s&^&&'
psdir='${docdir}'
pyexecdir=''
pythondir=''
report_fold='/usr/bin/fold'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='/etc'
target='arm-buildroot-linux-uclibcgnueabihf'
target_alias='arm-buildroot-linux-uclibcgnueabihf'
target_cpu='arm'
target_os='linux-uclibcgnueabihf'
target_vendor='buildroot'

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "lttng-tools"
#define PACKAGE_TARNAME "lttng-tools"
#define PACKAGE_VERSION "2.10.1"
#define PACKAGE_STRING "lttng-tools 2.10.1"
#define PACKAGE_BUGREPORT "jeremie.galarneau@efficios.com"
#define PACKAGE_URL "https://lttng.org"
#define PACKAGE "lttng-tools"
#define VERSION "2.10.1"
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define __EXTENSIONS__ 1
#define _ALL_SOURCE 1
#define _GNU_SOURCE 1
#define _POSIX_PTHREAD_SEMANTICS 1
#define _TANDEM_SOURCE 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define HAVE___ATTRIBUTE__ 1
#define HAVE_PTHREAD_PRIO_INHERIT 1
#define HAVE_PTHREAD 1
#define VERSION_MAJOR 2
#define VERSION_MINOR 10
#define VERSION_PATCHLEVEL 1
#define VERSION_NAME "KeKriek"
#define VERSION_DESCRIPTION "From Brasserie Dunham, a sour mashed golden wheat ale fermented with local sour cherries from Tougas orchards. Fresh sweet cherry notes with some tartness, lively carbonation with a dry finish."
#define HAVE_SYS_TYPES_H 1
#define HAVE_UNISTD_H 1
#define HAVE_FCNTL_H 1
#define HAVE_STRING_H 1
#define HAVE_PTHREAD_H 1
#define HAVE_LIMITS_H 1
#define HAVE_SIGNAL_H 1
#define HAVE_STDLIB_H 1
#define HAVE_SYS_UN_H 1
#define HAVE_SYS_SOCKET_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STDIO_H 1
#define HAVE_GETOPT_H 1
#define HAVE_SYS_IPC_H 1
#define HAVE_SYS_SHM_H 1
#define HAVE_POPT_H 1
#define HAVE_GRP_H 1
#define HAVE_ARPA_INET_H 1
#define HAVE_NETDB_H 1
#define HAVE_NETINET_IN_H 1
#define HAVE_PATHS_H 1
#define HAVE_STDDEF_H 1
#define HAVE_SYS_FILE_H 1
#define HAVE_SYS_IOCTL_H 1
#define HAVE_SYS_MOUNT_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_SYS_TIME_H 1
#define HAVE_ATEXIT 1
#define HAVE_BZERO 1
#define HAVE_CLOCK_GETTIME 1
#define HAVE_DUP2 1
#define HAVE_FDATASYNC 1
#define HAVE_FTRUNCATE 1
#define HAVE_GETHOSTBYNAME 1
#define HAVE_GETHOSTNAME 1
#define HAVE_GETPAGESIZE 1
#define HAVE_LOCALTIME_R 1
#define HAVE_MEMCHR 1
#define HAVE_MEMSET 1
#define HAVE_MKDIR 1
#define HAVE_MUNMAP 1
#define HAVE_PUTENV 1
#define HAVE_REALPATH 1
#define HAVE_RMDIR 1
#define HAVE_SOCKET 1
#define HAVE_STRCHR 1
#define HAVE_STRCSPN 1
#define HAVE_STRDUP 1
#define HAVE_STRNCASECMP 1
#define HAVE_STRNDUP 1
#define HAVE_STRNLEN 1
#define HAVE_STRPBRK 1
#define HAVE_STRRCHR 1
#define HAVE_STRSTR 1
#define HAVE_STRTOL 1
#define HAVE_STRTOUL 1
#define HAVE_STRTOULL 1
#define HAVE_DIRFD 1
#define HAVE_GETHOSTBYNAME2 1
#define HAVE_EPOLL_CREATE1 1
#define HAVE_SCHED_GETCPU 1
#define HAVE_SYSCONF 1
#define HAVE_SYNC_FILE_RANGE 1
#define HAVE_LIBRT 1
#define CONFIG_CONSUMERD32_BIN ""
#define CONFIG_CONSUMERD64_BIN ""
#define CONFIG_CONSUMERD32_LIBDIR ""
#define CONFIG_CONSUMERD64_LIBDIR ""
#define CONFIG_BABELTRACE_BIN ""
#define CONFIG_LTTV_GUI_BIN ""
#define CONFIG_SESSIOND_BIN ""
#define CONFIG_LTTNG_SYSTEM_RUNDIR "/var/run/lttng"
#define CONFIG_DEFAULT_AGENT_TCP_PORT 5345
#define CONFIG_DEFAULT_APP_SOCKET_RW_TIMEOUT 5
#define CONFIG_DEFAULT_CHANNEL_SUBBUF_SIZE 16384
#define CONFIG_DEFAULT_CHANNEL_TRACEFILE_COUNT 0
#define CONFIG_DEFAULT_CHANNEL_TRACEFILE_SIZE 0
#define CONFIG_DEFAULT_KERNEL_CHANNEL_LIVE_TIMER 0
#define CONFIG_DEFAULT_KERNEL_CHANNEL_READ_TIMER 200000
#define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_NUM 4
#define CONFIG_DEFAULT_KERNEL_CHANNEL_SUBBUF_SIZE 1048576
#define CONFIG_DEFAULT_KERNEL_CHANNEL_SWITCH_TIMER 0
#define CONFIG_DEFAULT_KERNEL_CHANNEL_MONITOR_TIMER 1000000
#define CONFIG_DEFAULT_KERNEL_CHANNEL_BLOCKING_TIMEOUT 0
#define CONFIG_DEFAULT_LTTNG_LIVE_TIMER 1000000
#define CONFIG_DEFAULT_METADATA_CACHE_SIZE 4096
#define CONFIG_DEFAULT_METADATA_READ_TIMER 0
#define CONFIG_DEFAULT_METADATA_SUBBUF_NUM 2
#define CONFIG_DEFAULT_METADATA_SUBBUF_SIZE 4096
#define CONFIG_DEFAULT_METADATA_SWITCH_TIMER 0
#define CONFIG_DEFAULT_NETWORK_CONTROL_PORT 5342
#define CONFIG_DEFAULT_NETWORK_DATA_PORT 5343
#define CONFIG_DEFAULT_NETWORK_VIEWER_PORT 5344
#define CONFIG_DEFAULT_UST_PID_CHANNEL_LIVE_TIMER 0
#define CONFIG_DEFAULT_UST_PID_CHANNEL_READ_TIMER 0
#define CONFIG_DEFAULT_UST_PID_CHANNEL_BLOCKING_TIMEOUT 0
#define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_NUM 4
#define CONFIG_DEFAULT_UST_PID_CHANNEL_SUBBUF_SIZE 16384
#define CONFIG_DEFAULT_UST_PID_CHANNEL_SWITCH_TIMER 0
#define CONFIG_DEFAULT_UST_PID_CHANNEL_MONITOR_TIMER 1000000
#define CONFIG_DEFAULT_UST_UID_CHANNEL_LIVE_TIMER 0
#define CONFIG_DEFAULT_UST_UID_CHANNEL_READ_TIMER 0
#define CONFIG_DEFAULT_UST_UID_CHANNEL_BLOCKING_TIMEOUT 0
#define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_NUM 4
#define CONFIG_DEFAULT_UST_UID_CHANNEL_SUBBUF_SIZE 524288
#define CONFIG_DEFAULT_UST_UID_CHANNEL_SWITCH_TIMER 0
#define CONFIG_DEFAULT_UST_UID_CHANNEL_MONITOR_TIMER 1000000
#define CONFIG_DEFAULT_AGENT_BIND_ADDRESS "localhost"
#define CONFIG_DEFAULT_NETWORK_CONTROL_BIND_ADDRESS "0.0.0.0"
#define CONFIG_DEFAULT_NETWORK_DATA_BIND_ADDRESS "0.0.0.0"
#define CONFIG_DEFAULT_NETWORK_VIEWER_BIND_ADDRESS "localhost"
#define CONFIG_CMD_DESCR_ADD_CONTEXT "Add context fields to a channel"
#define CONFIG_CMD_DESCR_CREATE "Create a tracing session"
#define CONFIG_CMD_DESCR_DESTROY "Tear down tracing sessions"
#define CONFIG_CMD_DESCR_DISABLE_CHANNEL "Disable tracing channels"
#define CONFIG_CMD_DESCR_DISABLE_EVENT "Disable event rules"
#define CONFIG_CMD_DESCR_ENABLE_CHANNEL "Create or enable tracing channels"
#define CONFIG_CMD_DESCR_ENABLE_EVENT "Create or enable event rules"
#define CONFIG_CMD_DESCR_HELP "Display help information about a command"
#define CONFIG_CMD_DESCR_LIST "List tracing sessions, domains, channels, and events"
#define CONFIG_CMD_DESCR_LOAD "Load tracing session configurations"
#define CONFIG_CMD_DESCR_REGENERATE "Manage an LTTng tracing session's data regeneration"
#define CONFIG_CMD_DESCR_SAVE "Save tracing session configurations"
#define CONFIG_CMD_DESCR_SET_SESSION "Set current tracing session"
#define CONFIG_CMD_DESCR_SNAPSHOT "Snapshot buffers of current tracing session"
#define CONFIG_CMD_DESCR_START "Start tracing"
#define CONFIG_CMD_DESCR_STATUS "Get the status of the current tracing session"
#define CONFIG_CMD_DESCR_STOP "Stop tracing"
#define CONFIG_CMD_DESCR_TRACK "Track specific system resources"
#define CONFIG_CMD_DESCR_UNTRACK "Untrack specific system resources"
#define CONFIG_CMD_DESCR_VERSION "Show version information"
#define CONFIG_CMD_DESCR_VIEW "Start trace viewer"
#define CONFIG_LTTNG_SYSTEM_CONFIGDIR "/etc"
#define CONFIG_LTTNG_SYSTEM_DATADIR "/usr/share"
#define LTTNG_HAVE_LIBUUID 1
#define LTTNG_HAVE_CLOCK_GETTIME 1
#define HAVE_LIBURCU_CDS 1
#define LTTNG_HAVE_FMEMOPEN 1
#define LTTNG_HAVE_OPEN_MEMSTREAM 1
#define HAVE_EPOLL 1
#define MANPATH "/usr/share/man"

configure: exit 0
